{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\components\\\\Board\\\\BoardList.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardList({\n  isLogin\n}) {\n  _s();\n  const [listData, setListData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(\"/board/boardList\").then(response => setListData(response.data)).catch(error => setError(error));\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAC8C\\uC2DC\\uD310\\uC744 \\uBD88\\uB7EC\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4. => \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  }\n  return;\n  //   <table style={{ width: \"60%\", margin: \"0 auto\" }}>\n  //     <thead>\n  //       <tr><td colSpan={5} height={30}>게시판</td></tr>\n  //       <tr style={{ background: \"gray\" }}>\n  //         <th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\n  //       </tr>\n  //     </thead>\n  //     <tbody>\n  //       {listData.map(b => (\n  //         <tr key={b.board_id}>\n  //           <td>{b.board_id}</td>\n  //           <td>{b.title}</td>\n  //           <td>{b.name}</td>\n  //           <td>{b.views}</td>\n  //           <td>{b.reg_date}</td>\n  //         </tr>\n  //       ))}\n  //       <tr>\n  //         <td colSpan={5} align=\"right\">\n  //           <Link to=\"/boardInsertForm\">\n  //             <button type=\"button\" style={{ width: 80, height: 30, fontSize: 18 }}>글쓰기</button>\n  //           </Link>\n  //         </td>\n  //       </tr>\n  //     </tbody>\n  //   </table>\n  // );\n}\n\n// 자유게시판 ajax 함수\n// export default function boardList(isLogin){\n\n//     let url=\"/board/boardList\"; \n//     axios.get(url\n//     ).then(response=>{\n//         let listData=response.data;\n//         let resultHtml=\n//         `<table style=\"width:60%; margin-left: auto; margin-right: auto;\">\n//         <tr><td colspan=5 height=30 >게시판</td></tr>\n// \t\t<tr bgcolor=\"Gray\" >\n// \t\t\t<th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\n// \t  \t</tr>`\n//         for(let b of listData){\n//             resultHtml+=\n//             `<tr><td>${b.board_id}</td><td>${b.title}</td><td>${b.name}</td>\n// \t\t\t\t<td>${b.views}</td><td>${b.reg_date}</td></tr>`\n//         }\n//         resultHtml+=`<tr><td colspan=5 align=\"right\">`<Link to=\"/boardInsertForm\">\n//                      `<button type=\"button\" style=\"width: 80px; height: 30px; font-size: 18px;\">글쓰기</button>`\n//                      </Link>`</td></tr></table>`;\n//         document.getElementById(\"mainArea\").innerHTML=resultHtml;\n//     }).catch(error=>{\n//         if(error.response.status===502){\n//             document.getElementById(\"mainArea\").innerHTML=error.response.data;\n//         }else{\n//             document.getElementById(\"mainArea\").innerHTML\n//             =`게시판을 불러오지 못했습니다. => ${error.message}`;\n//         }\n//     });    \n// }\n_s(BoardList, \"84pARHrx7hqRjYTSPH3HHUzprKY=\");\n_c = BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["axios","Link","useEffect","useState","jsxDEV","_jsxDEV","BoardList","isLogin","_s","listData","setListData","error","setError","get","then","response","data","catch","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/BoardList.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function BoardList({ isLogin }) {\r\n    const [listData, setListData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      axios.get(\"/board/boardList\")\r\n        .then(response => setListData(response.data))\r\n        .catch(error => setError(error));\r\n    }, []);\r\n  \r\n    if (error) {\r\n      return <div>게시판을 불러오지 못했습니다. =&gt; {error.message}</div>;\r\n    }\r\n  \r\n    return \r\n    //   <table style={{ width: \"60%\", margin: \"0 auto\" }}>\r\n    //     <thead>\r\n    //       <tr><td colSpan={5} height={30}>게시판</td></tr>\r\n    //       <tr style={{ background: \"gray\" }}>\r\n    //         <th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\r\n    //       </tr>\r\n    //     </thead>\r\n    //     <tbody>\r\n    //       {listData.map(b => (\r\n    //         <tr key={b.board_id}>\r\n    //           <td>{b.board_id}</td>\r\n    //           <td>{b.title}</td>\r\n    //           <td>{b.name}</td>\r\n    //           <td>{b.views}</td>\r\n    //           <td>{b.reg_date}</td>\r\n    //         </tr>\r\n    //       ))}\r\n    //       <tr>\r\n    //         <td colSpan={5} align=\"right\">\r\n    //           <Link to=\"/boardInsertForm\">\r\n    //             <button type=\"button\" style={{ width: 80, height: 30, fontSize: 18 }}>글쓰기</button>\r\n    //           </Link>\r\n    //         </td>\r\n    //       </tr>\r\n    //     </tbody>\r\n    //   </table>\r\n    // );\r\n  }\r\n\r\n\r\n\r\n// 자유게시판 ajax 함수\r\n// export default function boardList(isLogin){\r\n\r\n   \r\n\r\n//     let url=\"/board/boardList\"; \r\n//     axios.get(url\r\n//     ).then(response=>{\r\n//         let listData=response.data;\r\n//         let resultHtml=\r\n//         `<table style=\"width:60%; margin-left: auto; margin-right: auto;\">\r\n//         <tr><td colspan=5 height=30 >게시판</td></tr>\r\n// \t\t<tr bgcolor=\"Gray\" >\r\n// \t\t\t<th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\r\n// \t  \t</tr>`\r\n//         for(let b of listData){\r\n//             resultHtml+=\r\n//             `<tr><td>${b.board_id}</td><td>${b.title}</td><td>${b.name}</td>\r\n// \t\t\t\t<td>${b.views}</td><td>${b.reg_date}</td></tr>`\r\n//         }\r\n//         resultHtml+=`<tr><td colspan=5 align=\"right\">`<Link to=\"/boardInsertForm\">\r\n//                      `<button type=\"button\" style=\"width: 80px; height: 30px; font-size: 18px;\">글쓰기</button>`\r\n//                      </Link>`</td></tr></table>`;\r\n//         document.getElementById(\"mainArea\").innerHTML=resultHtml;\r\n//     }).catch(error=>{\r\n//         if(error.response.status===502){\r\n//             document.getElementById(\"mainArea\").innerHTML=error.response.data;\r\n//         }else{\r\n//             document.getElementById(\"mainArea\").innerHTML\r\n//             =`게시판을 불러오지 못했습니다. => ${error.message}`;\r\n//         }\r\n//     });    \r\n// }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdF,KAAK,CAACa,GAAG,CAAC,kBAAkB,CAAC,CAC1BC,IAAI,CAACC,QAAQ,IAAIL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAACN,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACT,oBAAON,OAAA;MAAAa,QAAA,GAAK,uFAAuB,EAACP,KAAK,CAACQ,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1D;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAIF;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAf,EAAA,CA9EwBF,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}