{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\components\\\\Board\\\\BoardEditForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BoardInsertFormStyle from \"./BoardInsertFormStyle\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardEditForm() {\n  _s();\n  const {\n    board_id\n  } = useParams(); // URL에서 게시글 id 추출\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n\n  // 기존 게시글 데이터 불러오기 (수정 폼 진입 시 1회)\n  useEffect(() => {\n    axios.get(`/board/boardDetail/${board_id}`).then(response => {\n      setTitle(response.data.title);\n      setContent(response.data.content);\n    }).catch(error => {\n      alert(\"게시글 정보를 불러오지 못했습니다.\");\n      navigate(\"/boardList\");\n    });\n  }, [board_id, navigate]);\n\n  // 수정 폼 제출\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`/board/updateboard/${board_id}`, {\n        board_id,\n        title,\n        content\n      }, {\n        headers: {\n          Authorization: `${localStorage.getItem(\"grantType\")} ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      alert(\"게시글이 수정되었습니다.\");\n      navigate(`/boardDetail/${board_id}`);\n    } catch (err) {\n      alert(\"게시글 수정에 실패했습니다.\");\n    }\n  };\n  console.log;\n  return /*#__PURE__*/_jsxDEV(BoardInsertFormStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardInsertFormContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"titleLabel\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            className: \"titleInput\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contentRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            className: \"contentLabel\",\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            name: \"content\",\n            className: \"contentTextarea\",\n            value: content,\n            onChange: e => setContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonRow\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submitBtn\",\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardEditForm, \"n91lNXvm+3O4U2HiprHRj7LUuRM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardEditForm;\nvar _c;\n$RefreshReg$(_c, \"BoardEditForm\");","map":{"version":3,"names":["React","useEffect","useState","BoardInsertFormStyle","axios","useNavigate","useParams","jsxDEV","_jsxDEV","BoardEditForm","_s","board_id","title","setTitle","content","setContent","navigate","get","then","response","data","catch","error","alert","handleSubmit","e","preventDefault","put","headers","Authorization","localStorage","getItem","err","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/BoardEditForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport BoardInsertFormStyle from \"./BoardInsertFormStyle\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nexport default function BoardEditForm() {\r\n  const { board_id } = useParams(); // URL에서 게시글 id 추출\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // 기존 게시글 데이터 불러오기 (수정 폼 진입 시 1회)\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/board/boardDetail/${board_id}`)\r\n      .then((response) => {\r\n        setTitle(response.data.title);\r\n        setContent(response.data.content);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"게시글 정보를 불러오지 못했습니다.\");\r\n        navigate(\"/boardList\");\r\n      });\r\n  }, [board_id, navigate]);\r\n\r\n  // 수정 폼 제출\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`/board/updateboard/${board_id}`, { board_id, title, content }, {\r\n        headers: {\r\n          Authorization: `${localStorage.getItem(\"grantType\")} ${localStorage.getItem(\"accessToken\")}`\r\n        }\r\n      });\r\n      alert(\"게시글이 수정되었습니다.\");\r\n      navigate(`/boardDetail/${board_id}`);\r\n    } catch (err) {\r\n      alert(\"게시글 수정에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  console.log\r\n\r\n  return (\r\n    <BoardInsertFormStyle>\r\n      <div className=\"boardInsertFormContainer\">\r\n        <h2>게시글 수정</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"titleRow\">\r\n            <label htmlFor=\"title\" className=\"titleLabel\">\r\n              제목\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              className=\"titleInput\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"contentRow\">\r\n            <label htmlFor=\"content\" className=\"contentLabel\">\r\n              내용\r\n            </label>\r\n            <textarea\r\n              id=\"content\"\r\n              name=\"content\"\r\n              className=\"contentTextarea\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"buttonRow\">\r\n            <button type=\"submit\" className=\"submitBtn\">\r\n              수정하기\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </BoardInsertFormStyle>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}