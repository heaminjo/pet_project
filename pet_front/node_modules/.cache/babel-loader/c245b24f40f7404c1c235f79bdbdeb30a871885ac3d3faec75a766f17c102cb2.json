{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\page\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport LoginComp from \"./LoginStyle\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  //유효성 조건(yup)\n  const schema = yup.object({\n    email: yup.string().email(\"올바른 이메일 형식이 아닙니다.\").required(\"필수 입력입니다.\"),\n    password: yup.string().required(\"필수 입력입니다.\").matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?/~`\\-=|\\\\]).{10,16}$/, \"10~16자 대소문자+영문+특수 기호로 조합해주세요.\")\n  });\n\n  //react hook form\n  const {\n    register,\n    //폼 필드와 리액트 훅 폼을 연결\n    watch,\n    //특정 watch(\"email\") 입력값들을 실시간 감시\n    handleSubmit,\n    trigger,\n    //실시간 검사\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onBlur\" // 실시간 검사\n  });\n  return /*#__PURE__*/_jsxDEV(LoginComp, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"login_form\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                ...register(\"eamil\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_message\",\n                children: errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                ...register(\"password\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_message\",\n                children: errors.password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"NXRzcI6nRU4HIYLA/i4mhvQ81cw=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","LoginComp","yupResolver","yup","jsxDEV","_jsxDEV","Login","_s","schema","object","email","string","required","password","matches","register","watch","handleSubmit","trigger","setValue","formState","errors","resolver","mode","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","message","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/page/auth/Login.jsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport LoginComp from \"./LoginStyle\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nexport default function Login() {\r\n  //유효성 조건(yup)\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(\"올바른 이메일 형식이 아닙니다.\")\r\n      .required(\"필수 입력입니다.\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"필수 입력입니다.\")\r\n      .matches(\r\n        /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?/~`\\-=|\\\\]).{10,16}$/,\r\n        \"10~16자 대소문자+영문+특수 기호로 조합해주세요.\"\r\n      ),\r\n  });\r\n\r\n  //react hook form\r\n  const {\r\n    register, //폼 필드와 리액트 훅 폼을 연결\r\n    watch, //특정 watch(\"email\") 입력값들을 실시간 감시\r\n    handleSubmit,\r\n    trigger, //실시간 검사\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: \"onBlur\", // 실시간 검사\r\n  });\r\n\r\n  return (\r\n    <LoginComp>\r\n      <div className=\"login_inner\">\r\n        <div className=\"login_container\">\r\n          <h2>로그인</h2>\r\n          <form>\r\n            <ul className=\"login_form\">\r\n              <li>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  {...register(\"eamil\")}\r\n                />\r\n                {errors.email && (\r\n                  <p className=\"error_message\">{errors.email.message}</p>\r\n                )}\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  {...register(\"password\")}\r\n                />\r\n                {errors.password && (\r\n                  <p className=\"error_message\">{errors.password.message}</p>\r\n                )}\r\n              </li>\r\n            </ul>\r\n            <button>로그인</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </LoginComp>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}