{"ast":null,"code":"import axios from \"axios\";\n\n//공통 설정을 갖는 axios 인스턴스\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\"\n});\n\n//요청 인터셉터 설정\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\");\n  //토큰이 존재하면\n  if (token != null) {\n    config.headers[\"authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n});\n\n//interceptors 을 통해 에러 상태코드에 따른 핸들링링\ninstance.interceptors.response.use(\n//성공한 응답일 경우 그대로 넘기지만\n//에러 일 경우 asycn 함수가 호출\nresponse => response, async error => {\n  //error.config는 에러가 난 객체의 설정 정보보\n  const originalRequest = error.config;\n  console.log(\"401 에러 확인\");\n\n  //토큰이 만료되었을 경우\n  if (error.response.status == 401 && !originalRequest._retry) {\n    //계속 401 에러가 날경우 무한 요청 에러를 방지지\n    originalRequest._retry = true;\n    //리프레쉬 가져오기\n  }\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","response","error","originalRequest","console","log","status","_retry"],"sources":["C:/devv/pet_project/pet_front/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n//공통 설정을 갖는 axios 인스턴스\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n});\r\n\r\n//요청 인터셉터 설정\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  //토큰이 존재하면\r\n  if (token != null) {\r\n    config.headers[\"authorization\"] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n//interceptors 을 통해 에러 상태코드에 따른 핸들링링\r\ninstance.interceptors.response.use(\r\n  //성공한 응답일 경우 그대로 넘기지만\r\n  //에러 일 경우 asycn 함수가 호출\r\n  (response) => response,\r\n  async (error) => {\r\n    //error.config는 에러가 난 객체의 설정 정보보\r\n    const originalRequest = error.config;\r\n    console.log(\"401 에러 확인\");\r\n\r\n    //토큰이 만료되었을 경우\r\n    if (error.response.status == 401 && !originalRequest._retry) {\r\n      //계속 401 에러가 날경우 무한 요청 에러를 방지지\r\n      originalRequest._retry = true;\r\n      //리프레쉬 가져오기\r\n    }\r\n  }\r\n);\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD;EACA,IAAIF,KAAK,IAAI,IAAI,EAAE;IACjBD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAN,QAAQ,CAACG,YAAY,CAACQ,QAAQ,CAACN,GAAG;AAChC;AACA;AACCM,QAAQ,IAAKA,QAAQ,EACtB,MAAOC,KAAK,IAAK;EACf;EACA,MAAMC,eAAe,GAAGD,KAAK,CAACN,MAAM;EACpCQ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;EAExB;EACA,IAAIH,KAAK,CAACD,QAAQ,CAACK,MAAM,IAAI,GAAG,IAAI,CAACH,eAAe,CAACI,MAAM,EAAE;IAC3D;IACAJ,eAAe,CAACI,MAAM,GAAG,IAAI;IAC7B;EACF;AACF,CACF,CAAC;AACD,eAAejB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}