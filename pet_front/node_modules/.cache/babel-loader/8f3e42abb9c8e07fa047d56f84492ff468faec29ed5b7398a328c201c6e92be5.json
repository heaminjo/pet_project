{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\components\\\\Board\\\\BoardList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport BoardListStyle from \"./BoardListStyle\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardList({\n  isLogin\n}) {\n  _s();\n  // 나중에 login 여부에 따라 글쓰기 버튼을 보여줄지 말지 결정할 수 있음\n  const [listData, setListData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(\"/board/boardList\").then(response => setListData(response.data)).catch(error => setError(error));\n  }, []);\n  if (error) {\n    // 서버 에러 코드에 따라 메시지 분기\n    if (error.response && error.response.status === 502) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.response.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAC8C\\uC2DC\\uD310\\uC744 \\uBD88\\uB7EC\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4. => \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BoardListStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardListContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 5,\n              height: 30,\n              children: \"\\uAC8C\\uC2DC\\uD310\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: \" #f8e776\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"NO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC791\\uC131\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC870\\uD68C\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC791\\uC131\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [listData.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"center\",\n              children: b.board_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"center\",\n              children: b.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"center\",\n              children: b.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"center\",\n              children: b.views\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"center\",\n              children: b.reg_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, b.board_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 5,\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                style: {\n                  width: 80,\n                  height: 30,\n                  fontSize: 18\n                },\n                onClick: () => Navigate(\"/BoardInsertForm\") // 글쓰기 이동 기능 추가 가능\n                ,\n                children: \"\\uAE00\\uC4F0\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// 자유게시판 ajax 함수\n// export default function boardList(isLogin){\n\n//     let url=\"/board/boardList\"; \n//     axios.get(url\n//     ).then(response=>{\n//         let listData=response.data;\n//         let resultHtml=\n//         `<table style=\"width:60%; margin-left: auto; margin-right: auto;\">\n//         <tr><td colspan=5 height=30 >게시판</td></tr>\n// \t\t<tr bgcolor=\"Gray\" >\n// \t\t\t<th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\n// \t  \t</tr>`\n//         for(let b of listData){\n//             resultHtml+=\n//             `<tr><td>${b.board_id}</td><td>${b.title}</td><td>${b.name}</td>\n// \t\t\t\t<td>${b.views}</td><td>${b.reg_date}</td></tr>`\n//         }\n//         resultHtml+=`<tr><td colspan=5 align=\"right\">\n//                      <button type=\"button\" style=\"width: 80px; height: 30px; font-size: 18px;\">글쓰기</button>\n//                      </td></tr></table>`;\n//         document.getElementById(\"mainArea\").innerHTML=resultHtml;\n//     }).catch(error=>{\n//         if(error.response.status===502){\n//             document.getElementById(\"mainArea\").innerHTML=error.response.data;\n//         }else{\n//             document.getElementById(\"mainArea\").innerHTML\n//             =`게시판을 불러오지 못했습니다. => ${error.message}`;\n//         }\n//     });    \n// }\n_s(BoardList, \"84pARHrx7hqRjYTSPH3HHUzprKY=\");\n_c = BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","axios","BoardListStyle","Navigate","jsxDEV","_jsxDEV","BoardList","isLogin","_s","listData","setListData","error","setError","get","then","response","data","catch","status","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","colSpan","height","style","backgroundColor","map","b","board_id","title","name","views","reg_date","align","type","width","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/BoardList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport BoardListStyle from \"./BoardListStyle\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function BoardList({ isLogin }) {  // 나중에 login 여부에 따라 글쓰기 버튼을 보여줄지 말지 결정할 수 있음\r\n  const [listData, setListData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/board/boardList\")\r\n      .then(response => setListData(response.data))\r\n      .catch(error => setError(error));\r\n  }, []);\r\n\r\n  if (error) {\r\n    // 서버 에러 코드에 따라 메시지 분기\r\n    if (error.response && error.response.status === 502) {\r\n      return <div>{error.response.data}</div>;\r\n    }\r\n    return <div>게시판을 불러오지 못했습니다. =&gt; {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <BoardListStyle>\r\n      <div className=\"boardListContainer\">\r\n        <table >\r\n          <thead>\r\n            <tr>\r\n              <td colSpan={5} height={30}>게시판</td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: \" #f8e776\" }}>\r\n              <th>NO</th>\r\n              <th>제목</th>\r\n              <th>작성자</th>\r\n              <th>조회수</th>\r\n              <th>작성일</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listData.map((b) => (\r\n              <tr key={b.board_id}>\r\n                <td className=\"center\">{b.board_id}</td>\r\n                <td className=\"center\">{b.title}</td>\r\n                <td className=\"center\">{b.name}</td>\r\n                <td className=\"center\">{b.views}</td>\r\n                <td className=\"center\">{b.reg_date}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td colSpan={5} align=\"right\">\r\n                <button\r\n                  type=\"button\"\r\n                  style={{ width: 80, height: 30, fontSize: 18 }}\r\n                  onClick={() => Navigate(\"/BoardInsertForm\")} // 글쓰기 이동 기능 추가 가능\r\n                >\r\n                  글쓰기\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </BoardListStyle>\r\n  );\r\n}\r\n\r\n\r\n\r\n// 자유게시판 ajax 함수\r\n// export default function boardList(isLogin){\r\n\r\n   \r\n\r\n//     let url=\"/board/boardList\"; \r\n//     axios.get(url\r\n//     ).then(response=>{\r\n//         let listData=response.data;\r\n//         let resultHtml=\r\n//         `<table style=\"width:60%; margin-left: auto; margin-right: auto;\">\r\n//         <tr><td colspan=5 height=30 >게시판</td></tr>\r\n// \t\t<tr bgcolor=\"Gray\" >\r\n// \t\t\t<th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\r\n// \t  \t</tr>`\r\n//         for(let b of listData){\r\n//             resultHtml+=\r\n//             `<tr><td>${b.board_id}</td><td>${b.title}</td><td>${b.name}</td>\r\n// \t\t\t\t<td>${b.views}</td><td>${b.reg_date}</td></tr>`\r\n//         }\r\n//         resultHtml+=`<tr><td colspan=5 align=\"right\">\r\n//                      <button type=\"button\" style=\"width: 80px; height: 30px; font-size: 18px;\">글쓰기</button>\r\n//                      </td></tr></table>`;\r\n//         document.getElementById(\"mainArea\").innerHTML=resultHtml;\r\n//     }).catch(error=>{\r\n//         if(error.response.status===502){\r\n//             document.getElementById(\"mainArea\").innerHTML=error.response.data;\r\n//         }else{\r\n//             document.getElementById(\"mainArea\").innerHTML\r\n//             =`게시판을 불러오지 못했습니다. => ${error.message}`;\r\n//         }\r\n//     });    \r\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}