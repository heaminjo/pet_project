{"ast":null,"code":"import axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\n// export default function BoardList({ isLogin }) {\n//   const [listData, setListData] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     axios.get(\"/board/boardList\")\n//       .then(response => setListData(response.data))\n//       .catch(error => setError(error));\n//   }, []);\n\n//   if (error) {\n//     return <div>게시판을 불러오지 못했습니다. =&gt; {error.message}</div>;\n//   }\n\n//   return (\n//     <table style={{ width: \"60%\", margin: \"0 auto\" }}>\n//       <thead>\n//         <tr><td colSpan={5} height={30}>게시판</td></tr>\n//         <tr style={{ background: \"gray\" }}>\n//           <th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {listData.map(b => (\n//           <tr key={b.board_id}>\n//             <td>{b.board_id}</td>\n//             <td>{b.title}</td>\n//             <td>{b.name}</td>\n//             <td>{b.views}</td>\n//             <td>{b.reg_date}</td>\n//           </tr>\n//         ))}\n//         <tr>\n//           <td colSpan={5} align=\"right\">\n//             <Link to=\"/boardInsertForm\">\n//               <button type=\"button\" style={{ width: 80, height: 30, fontSize: 18 }}>글쓰기</button>\n//             </Link>\n//           </td>\n//         </tr>\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// 자유게시판 ajax 함수\n// export default function boardList(isLogin){\n\n//     let url=\"/board/boardList\"; \n//     axios.get(url\n//     ).then(response=>{\n//         let listData=response.data;\n//         let resultHtml=\n//         `<table style=\"width:60%; margin-left: auto; margin-right: auto;\">\n//         <tr><td colspan=5 height=30 >게시판</td></tr>\n// \t\t<tr bgcolor=\"Gray\" >\n// \t\t\t<th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\n// \t  \t</tr>`\n//         for(let b of listData){\n//             resultHtml+=\n//             `<tr><td>${b.board_id}</td><td>${b.title}</td><td>${b.name}</td>\n// \t\t\t\t<td>${b.views}</td><td>${b.reg_date}</td></tr>`\n//         }\n//         resultHtml+=`<tr><td colspan=5 align=\"right\">\n//                      <button type=\"button\" style=\"width: 80px; height: 30px; font-size: 18px;\">글쓰기</button>\n//                      </td></tr></table>`;\n//         document.getElementById(\"mainArea\").innerHTML=resultHtml;\n//     }).catch(error=>{\n//         if(error.response.status===502){\n//             document.getElementById(\"mainArea\").innerHTML=error.response.data;\n//         }else{\n//             document.getElementById(\"mainArea\").innerHTML\n//             =`게시판을 불러오지 못했습니다. => ${error.message}`;\n//         }\n//     });    \n// }","map":{"version":3,"names":["axios","Link","useEffect","useState"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/BoardList.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n// export default function BoardList({ isLogin }) {\r\n//   const [listData, setListData] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     axios.get(\"/board/boardList\")\r\n//       .then(response => setListData(response.data))\r\n//       .catch(error => setError(error));\r\n//   }, []);\r\n\r\n//   if (error) {\r\n//     return <div>게시판을 불러오지 못했습니다. =&gt; {error.message}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <table style={{ width: \"60%\", margin: \"0 auto\" }}>\r\n//       <thead>\r\n//         <tr><td colSpan={5} height={30}>게시판</td></tr>\r\n//         <tr style={{ background: \"gray\" }}>\r\n//           <th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {listData.map(b => (\r\n//           <tr key={b.board_id}>\r\n//             <td>{b.board_id}</td>\r\n//             <td>{b.title}</td>\r\n//             <td>{b.name}</td>\r\n//             <td>{b.views}</td>\r\n//             <td>{b.reg_date}</td>\r\n//           </tr>\r\n//         ))}\r\n//         <tr>\r\n//           <td colSpan={5} align=\"right\">\r\n//             <Link to=\"/boardInsertForm\">\r\n//               <button type=\"button\" style={{ width: 80, height: 30, fontSize: 18 }}>글쓰기</button>\r\n//             </Link>\r\n//           </td>\r\n//         </tr>\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// 자유게시판 ajax 함수\r\n// export default function boardList(isLogin){\r\n\r\n   \r\n\r\n//     let url=\"/board/boardList\"; \r\n//     axios.get(url\r\n//     ).then(response=>{\r\n//         let listData=response.data;\r\n//         let resultHtml=\r\n//         `<table style=\"width:60%; margin-left: auto; margin-right: auto;\">\r\n//         <tr><td colspan=5 height=30 >게시판</td></tr>\r\n// \t\t<tr bgcolor=\"Gray\" >\r\n// \t\t\t<th>NO</th><th>제목</th><th>작성자</th><th>조회수</th><th>작성일</th>\r\n// \t  \t</tr>`\r\n//         for(let b of listData){\r\n//             resultHtml+=\r\n//             `<tr><td>${b.board_id}</td><td>${b.title}</td><td>${b.name}</td>\r\n// \t\t\t\t<td>${b.views}</td><td>${b.reg_date}</td></tr>`\r\n//         }\r\n//         resultHtml+=`<tr><td colspan=5 align=\"right\">\r\n//                      <button type=\"button\" style=\"width: 80px; height: 30px; font-size: 18px;\">글쓰기</button>\r\n//                      </td></tr></table>`;\r\n//         document.getElementById(\"mainArea\").innerHTML=resultHtml;\r\n//     }).catch(error=>{\r\n//         if(error.response.status===502){\r\n//             document.getElementById(\"mainArea\").innerHTML=error.response.data;\r\n//         }else{\r\n//             document.getElementById(\"mainArea\").innerHTML\r\n//             =`게시판을 불러오지 못했습니다. => ${error.message}`;\r\n//         }\r\n//     });    \r\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAG3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}