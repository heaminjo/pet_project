{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\components\\\\Board\\\\BoardEditForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BoardInsertFormStyle from \"./BoardInsertFormStyle\";\nimport axios from \"axios\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardEditForm() {\n  _s();\n  const {\n    category,\n    board_id\n  } = useParams(); // URL에서 게시글 id 추출\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const location = useLocation();\n  // 카테고리 기본값 설정\n  const navigate = useNavigate();\n  const [existingImages, setExistingImages] = useState([]); // 기존 이미지 파일명 배열\n  const [deletedImages, setDeletedImages] = useState([]); // 삭제할 기존 이미지 파일명 배열\n  const [newImageFiles, setNewImageFiles] = useState([]); // 새로 추가된 이미지 파일 객체 배열\n  const [newImagePreviews, setNewImagePreviews] = useState([]); // 새로 추가된 이미지 미리보기 배열\n\n  const [role, setRole] = useState(localStorage.getItem(\"role\") || \"\");\n  useEffect(() => {\n    const handleStorage = () => setRole(localStorage.getItem(\"role\") || \"\");\n    window.addEventListener(\"storage\", handleStorage);\n    return () => window.removeEventListener(\"storage\", handleStorage);\n  }, []);\n\n  // 기존 게시글 데이터 불러오기 (수정 폼 진입 시 1회)\n  useEffect(() => {\n    axios.get(`/board/boardDetail/${category}/${board_id}`).then(response => {\n      setTitle(response.data.title);\n      setContent(response.data.content);\n      setExistingImages(response.data.imageFileNames || []); // 기존 이미지 파일명 배열로 세팅\n    }).catch(error => {\n      alert(\"게시글 정보를 불러오지 못했습니다.\");\n      navigate(\"/boardList/free\");\n    });\n  }, [board_id, category, navigate]);\n\n  // 새 이미지 파일 선택 핸들러\n  const handleNewImageChange = e => {\n    const files = Array.from(e.target.files);\n    setNewImageFiles(prev => [...prev, ...files]); // 기존 파일에 새로 선택한 파일 추가\n    const previews = files.map(file => URL.createObjectURL(file));\n    setNewImagePreviews(prev => [...prev, ...previews]); // 기존 미리보기 + 새로 미리보기 합치기\n    e.target.value = \"\"; // 파일 선택 후 input 초기화\n  };\n\n  // 기존 이미지 삭제 핸들러\n  const handleExistingImageRemove = idx => {\n    setDeletedImages(prev => [...prev, existingImages[idx]]);\n    setExistingImages(prev => prev.filter((_, i) => i !== idx));\n  };\n\n  // 새 이미지 삭제 핸들러\n  const handleNewImageRemove = idx => {\n    setNewImagePreviews(prev => prev.filter((_, i) => i !== idx));\n    setNewImageFiles(prev => prev.filter((_, i) => i !== idx));\n  };\n\n  // 이미지 업로드 함수\n  const handleNewImageUpload = async () => {\n    if (!newImageFiles || newImageFiles.length === 0) return [];\n    const formData = new FormData();\n    newImageFiles.forEach(file => formData.append(\"files\", file));\n    try {\n      const res = await axios.post(\"/board/uploadimage\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      return res.data; // 서버에서 반환한 savedFileName 배열\n    } catch (error) {\n      alert(\"이미지 업로드 실패\");\n      return null;\n    }\n  };\n\n  // 수정 폼 제출\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 1. 새 이미지 업로드\n    let uploadedFileNames = [];\n    if (newImageFiles && newImageFiles.length > 0) {\n      uploadedFileNames = await handleNewImageUpload();\n      if (!uploadedFileNames || uploadedFileNames.length === 0) return;\n    }\n\n    //2. 게시글 정보 + 이미지 파일명 전송\n    let data = {\n      board_id,\n      title,\n      content,\n      // 기존 이미지 + 새로 업로드된 이미지\n      imageFileNames: [...existingImages, ...(uploadedFileNames || [])],\n      // 삭제할 기존 이미지 파일명 배열\n      deletedImageFileNames: deletedImages\n    };\n    try {\n      await axios.put(`/board/updateboard/${board_id}`, data, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      alert(\"게시글이 수정되었습니다.\");\n      navigate(`/boardList/${category}`);\n    } catch (err) {\n      alert(\"게시글 수정에 실패했습니다.\");\n    }\n  };\n  console.log(\"board_id\", board_id);\n  return /*#__PURE__*/_jsxDEV(BoardInsertFormStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardInsertFormContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"titleLabel\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            className: \"titleInput\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categoryRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            className: \"categoryLabel\",\n            children: \"\\uAC8C\\uC2DC\\uD310\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            name: \"category\",\n            className: \"categorySelect\",\n            value: category || \"\",\n            required: true,\n            disabled: true,\n            children: [role === \"ROLE_ADMIN\" && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"notice\",\n              children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"community\",\n              children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"faq\",\n              children: \"Q&A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"free\",\n              children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contentRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            className: \"contentLabel\",\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            name: \"content\",\n            className: \"contentTextarea\",\n            value: content,\n            onChange: e => setContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              className: \"imageLabel\",\n              children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image\",\n              accept: \"image/*\",\n              multiple: true,\n              onChange: handleNewImageChange,\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fileNameText\",\n              children: newImageFiles.length > 0 ? newImageFiles.map(f => f.name).join(\", \") : \"파일을 선택하세요.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), existingImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imagePreview\",\n            children: existingImages.map((fileName, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imagePreviewBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8080/resources/webapp/userImages/${fileName}`,\n                alt: `기존이미지${idx}`,\n                width: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"removeImageBtn\",\n                onClick: () => handleExistingImageRemove(idx),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)]\n            }, fileName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), newImagePreviews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imagePreview\",\n            children: newImagePreviews.map((src, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imagePreviewBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: src,\n                alt: `새이미지${idx}`,\n                width: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"removeImageBtn\",\n                onClick: () => handleNewImageRemove(idx),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonRow\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submitBtn\",\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardEditForm, \"KIShbhsWPNPAhP0mzvAvU2brpj4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = BoardEditForm;\nvar _c;\n$RefreshReg$(_c, \"BoardEditForm\");","map":{"version":3,"names":["React","useEffect","useState","BoardInsertFormStyle","axios","useNavigate","useParams","useLocation","jsxDEV","_jsxDEV","BoardEditForm","_s","category","board_id","title","setTitle","content","setContent","location","navigate","existingImages","setExistingImages","deletedImages","setDeletedImages","newImageFiles","setNewImageFiles","newImagePreviews","setNewImagePreviews","role","setRole","localStorage","getItem","handleStorage","window","addEventListener","removeEventListener","get","then","response","data","imageFileNames","catch","error","alert","handleNewImageChange","e","files","Array","from","target","prev","previews","map","file","URL","createObjectURL","value","handleExistingImageRemove","idx","filter","_","i","handleNewImageRemove","handleNewImageUpload","length","formData","FormData","forEach","append","res","post","headers","handleSubmit","preventDefault","uploadedFileNames","deletedImageFileNames","put","Authorization","err","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","onChange","required","disabled","accept","multiple","style","display","f","join","src","alt","width","onClick","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/BoardEditForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport BoardInsertFormStyle from \"./BoardInsertFormStyle\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\n\r\nexport default function BoardEditForm() {\r\n  const { category, board_id } = useParams(); // URL에서 게시글 id 추출\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const location = useLocation();\r\n  // 카테고리 기본값 설정\r\n  const navigate = useNavigate();\r\n  const [existingImages, setExistingImages] = useState([]); // 기존 이미지 파일명 배열\r\n  const [deletedImages, setDeletedImages] = useState([]);   // 삭제할 기존 이미지 파일명 배열\r\n  const [newImageFiles, setNewImageFiles] = useState([]);   // 새로 추가된 이미지 파일 객체 배열\r\n  const [newImagePreviews, setNewImagePreviews] = useState([]); // 새로 추가된 이미지 미리보기 배열\r\n\r\n  const [role, setRole] = useState(localStorage.getItem(\"role\") || \"\");\r\n\r\n  useEffect(() => {\r\n    const handleStorage = () => setRole(localStorage.getItem(\"role\") || \"\");\r\n    window.addEventListener(\"storage\", handleStorage);\r\n    return () => window.removeEventListener(\"storage\", handleStorage);\r\n  }, []);\r\n\r\n  // 기존 게시글 데이터 불러오기 (수정 폼 진입 시 1회)\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/board/boardDetail/${category}/${board_id}`)\r\n      .then((response) => {\r\n        setTitle(response.data.title);\r\n        setContent(response.data.content);\r\n        setExistingImages(response.data.imageFileNames || []); // 기존 이미지 파일명 배열로 세팅\r\n      })\r\n      .catch((error) => {\r\n        alert(\"게시글 정보를 불러오지 못했습니다.\");\r\n        navigate(\"/boardList/free\");\r\n      });\r\n  }, [board_id, category, navigate]);\r\n\r\n  // 새 이미지 파일 선택 핸들러\r\n  const handleNewImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setNewImageFiles(prev => [...prev, ...files]); // 기존 파일에 새로 선택한 파일 추가\r\n    const previews = files.map(file => URL.createObjectURL(file));\r\n    setNewImagePreviews(prev => [...prev, ...previews]); // 기존 미리보기 + 새로 미리보기 합치기\r\n    e.target.value = \"\"; // 파일 선택 후 input 초기화\r\n  };\r\n\r\n  // 기존 이미지 삭제 핸들러\r\n  const handleExistingImageRemove = (idx) => {\r\n    setDeletedImages(prev => [...prev, existingImages[idx]]);\r\n    setExistingImages(prev => prev.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  // 새 이미지 삭제 핸들러\r\n  const handleNewImageRemove = (idx) => {\r\n    setNewImagePreviews(prev => prev.filter((_, i) => i !== idx));\r\n    setNewImageFiles(prev => prev.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  // 이미지 업로드 함수\r\n  const handleNewImageUpload = async () => {\r\n    if (!newImageFiles || newImageFiles.length === 0) return [];\r\n    const formData = new FormData();\r\n    newImageFiles.forEach(file => formData.append(\"files\", file));\r\n    try {\r\n      const res = await axios.post(\"/board/uploadimage\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      return res.data; // 서버에서 반환한 savedFileName 배열\r\n    } catch (error) {\r\n      alert(\"이미지 업로드 실패\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // 수정 폼 제출\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 1. 새 이미지 업로드\r\n    let uploadedFileNames = [];\r\n    if (newImageFiles && newImageFiles.length > 0) {\r\n      uploadedFileNames = await handleNewImageUpload();\r\n      if (!uploadedFileNames || uploadedFileNames.length === 0) return;\r\n    }\r\n\r\n    //2. 게시글 정보 + 이미지 파일명 전송\r\n    let data = { board_id, title, content,\r\n      // 기존 이미지 + 새로 업로드된 이미지\r\n      imageFileNames: [...existingImages, ...(uploadedFileNames || [])],\r\n      // 삭제할 기존 이미지 파일명 배열\r\n      deletedImageFileNames: deletedImages\r\n     };\r\n\r\n    try {\r\n      await axios.put(`/board/updateboard/${board_id}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n        },\r\n      });\r\n      alert(\"게시글이 수정되었습니다.\");\r\n\r\n      navigate(`/boardList/${category}`); \r\n      \r\n    } catch (err) {\r\n      alert(\"게시글 수정에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  console.log(\"board_id\", board_id);\r\n\r\n  return (\r\n    <BoardInsertFormStyle>\r\n      <div className=\"boardInsertFormContainer\">\r\n        <h2>게시글 수정</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"titleRow\">\r\n            <label htmlFor=\"title\" className=\"titleLabel\">\r\n              제목\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              className=\"titleInput\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"categoryRow\">\r\n            <label htmlFor=\"category\" className=\"categoryLabel\">\r\n              게시판\r\n            </label>\r\n            <select\r\n              id=\"category\"\r\n              name=\"category\"\r\n              className=\"categorySelect\"\r\n              value={category || \"\"}\r\n              required\r\n              disabled\r\n            >\r\n              {role === \"ROLE_ADMIN\" && (\r\n                <option value=\"notice\">공지사항</option>\r\n              )}\r\n              <option value=\"community\">커뮤니티</option>\r\n              <option value=\"faq\">Q&A</option>\r\n              <option value=\"free\">자유게시판</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"contentRow\">\r\n            <label htmlFor=\"content\" className=\"contentLabel\">\r\n              내용\r\n            </label>\r\n            <textarea\r\n              id=\"content\"\r\n              name=\"content\"\r\n              className=\"contentTextarea\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"imageRow\">\r\n            <div className=\"uploadBox\">\r\n              <label htmlFor=\"image\" className=\"imageLabel\">\r\n                이미지 업로드\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                accept=\"image/*\"\r\n                multiple\r\n                onChange={handleNewImageChange}\r\n                style={{ display: \"none\"}}\r\n              />\r\n              <span className=\"fileNameText\">\r\n                {newImageFiles.length > 0\r\n                  ? newImageFiles.map(f => f.name).join(\", \")\r\n                  : \"파일을 선택하세요.\"}\r\n              </span>\r\n            </div>\r\n            {/* 기존 이미지 미리보기 (삭제 버튼 포함) */}\r\n            {existingImages.length > 0 && (\r\n              <div className=\"imagePreview\">\r\n                {existingImages.map((fileName, idx) => (\r\n                  <div className=\"imagePreviewBox\" key={fileName}>\r\n                    <img\r\n                      src={`http://localhost:8080/resources/webapp/userImages/${fileName}`}\r\n                      alt={`기존이미지${idx}`}\r\n                      width={200}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"removeImageBtn\"\r\n                      onClick={() => handleExistingImageRemove(idx)}\r\n                    >\r\n                      x\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {/* 새로 추가된 이미지 미리보기 (삭제 버튼 포함) */}\r\n            {newImagePreviews.length > 0 && (\r\n              <div className=\"imagePreview\">\r\n                {newImagePreviews.map((src, idx) => (\r\n                  <div className=\"imagePreviewBox\" key={idx}>\r\n                    <img src={src} alt={`새이미지${idx}`} width={200} />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"removeImageBtn\"\r\n                      onClick={() => handleNewImageRemove(idx)}\r\n                    >\r\n                      x\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"buttonRow\">\r\n            <button type=\"submit\" className=\"submitBtn\">\r\n              수정하기\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </BoardInsertFormStyle>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}