{"ast":null,"code":"import axios from \"axios\";\nimport instance from \"./axiosInstance\";\nconst KH_DOMAIN = \"http://localhost:8080\";\nconst MemberApi = {\n  //로그인\n  login: async (email, password) => {\n    const login = {\n      email: email,\n      password: password\n    };\n    const result = await axios.post(`${KH_DOMAIN}/auth/login`, login, {\n      withCredentials: true\n    });\n    return result.data;\n  },\n  //이메일 중복 체크\n  dupEmail: async email => {\n    const result = await axios.get(`${KH_DOMAIN}/auth/emailcheck?email=${email}`);\n    return result.data;\n  },\n  //회원가입\n  join: async newUser => {\n    const result = await axios.post(`${KH_DOMAIN}/auth/join`, newUser);\n    return result.data.body;\n  },\n  //회원 조회\n  detail: async () => {\n    //요청 인터셉터를 통해 header\n    const result = await instance.get(`${KH_DOMAIN}/user/detail`);\n    return result.data;\n  },\n  //회원 수정정\n  update: async user => {\n    const result = await instance.patch(`${KH_DOMAIN}/user/update`, user);\n    return result.data;\n  },\n  //비밀번호 변경\n  updatePw: async passwords => {\n    const result = await instance.patch(`${KH_DOMAIN}/user/pwupdate`, passwords);\n    return result.data;\n  },\n  //리프레쉬 가져오기기\n  getRefresh: async () => {\n    const result = await axios.get(`${KH_DOMAIN}/auth/getrefresh`, {\n      withCredentials: true\n    });\n    return result.data;\n  },\n  //로그아웃\n  logout: async () => {\n    const result = await instance.get(`${KH_DOMAIN}/auth/logout`);\n    return result.data;\n  },\n  //회원 탈퇴\n  withdrawal: async () => {\n    console.log(\"처리 실행\");\n    const result = await instance.get(`${KH_DOMAIN}/user/withdrawal`);\n    return result.data;\n  },\n  //업로드 이미지\n  uploadImage: async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const result = await instance.post(`${KH_DOMAIN}/user/uploadimage`, formData);\n    return result.data;\n  },\n  //마지막 로그인 시간 업데이트\n  lastLogin: async () => {\n    const result = await instance.put(`${KH_DOMAIN}/auth/login/history`);\n    return result.data;\n  },\n  //카카오 로그인인\n  kakaoLogin: async code => {\n    const result = await axios.get(`${KH_DOMAIN}/kakao/login?code=${code}`);\n    return result.data;\n  },\n  //소셜 로그인 추가 정보 업데이트트\n  socialUpdate: async user => {\n    const result = await instance.put(`${KH_DOMAIN}/kakao/social/update`, user);\n    return result.data;\n  }\n};\nexport default MemberApi;","map":{"version":3,"names":["axios","instance","KH_DOMAIN","MemberApi","login","email","password","result","post","withCredentials","data","dupEmail","get","join","newUser","body","detail","update","user","patch","updatePw","passwords","getRefresh","logout","withdrawal","console","log","uploadImage","file","formData","FormData","append","lastLogin","put","kakaoLogin","code","socialUpdate"],"sources":["C:/devv/pet_project/pet_front/src/api/MemberApi.js"],"sourcesContent":["import axios from \"axios\";\r\nimport instance from \"./axiosInstance\";\r\nconst KH_DOMAIN = \"http://localhost:8080\";\r\nconst MemberApi = {\r\n  //로그인\r\n  login: async (email, password) => {\r\n    const login = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    const result = await axios.post(`${KH_DOMAIN}/auth/login`, login, {\r\n      withCredentials: true,\r\n    });\r\n    return result.data;\r\n  },\r\n  //이메일 중복 체크\r\n  dupEmail: async (email) => {\r\n    const result = await axios.get(\r\n      `${KH_DOMAIN}/auth/emailcheck?email=${email}`\r\n    );\r\n    return result.data;\r\n  },\r\n\r\n  //회원가입\r\n  join: async (newUser) => {\r\n    const result = await axios.post(`${KH_DOMAIN}/auth/join`, newUser);\r\n    return result.data.body;\r\n  },\r\n\r\n  //회원 조회\r\n  detail: async () => {\r\n    //요청 인터셉터를 통해 header\r\n    const result = await instance.get(`${KH_DOMAIN}/user/detail`);\r\n    return result.data;\r\n  },\r\n\r\n  //회원 수정정\r\n  update: async (user) => {\r\n    const result = await instance.patch(`${KH_DOMAIN}/user/update`, user);\r\n    return result.data;\r\n  },\r\n\r\n  //비밀번호 변경\r\n  updatePw: async (passwords) => {\r\n    const result = await instance.patch(\r\n      `${KH_DOMAIN}/user/pwupdate`,\r\n      passwords\r\n    );\r\n    return result.data;\r\n  },\r\n\r\n  //리프레쉬 가져오기기\r\n  getRefresh: async () => {\r\n    const result = await axios.get(`${KH_DOMAIN}/auth/getrefresh`, {\r\n      withCredentials: true,\r\n    });\r\n    return result.data;\r\n  },\r\n  //로그아웃\r\n  logout: async () => {\r\n    const result = await instance.get(`${KH_DOMAIN}/auth/logout`);\r\n    return result.data;\r\n  },\r\n  //회원 탈퇴\r\n  withdrawal: async () => {\r\n    console.log(\"처리 실행\");\r\n    const result = await instance.get(`${KH_DOMAIN}/user/withdrawal`);\r\n    return result.data;\r\n  },\r\n\r\n  //업로드 이미지\r\n  uploadImage: async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    const result = await instance.post(\r\n      `${KH_DOMAIN}/user/uploadimage`,\r\n      formData\r\n    );\r\n    return result.data;\r\n  },\r\n\r\n  //마지막 로그인 시간 업데이트\r\n  lastLogin: async () => {\r\n    const result = await instance.put(`${KH_DOMAIN}/auth/login/history`);\r\n    return result.data;\r\n  },\r\n  //카카오 로그인인\r\n  kakaoLogin: async (code) => {\r\n    const result = await axios.get(`${KH_DOMAIN}/kakao/login?code=${code}`);\r\n    return result.data;\r\n  },\r\n  //소셜 로그인 추가 정보 업데이트트\r\n  socialUpdate: async (user) => {\r\n    const result = await instance.put(`${KH_DOMAIN}/kakao/social/update`, user);\r\n    return result.data;\r\n  },\r\n};\r\nexport default MemberApi;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}