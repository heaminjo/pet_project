{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\page\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport LoginComp from \"./LoginStyle\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport MemberApi from \"../../api/MemberApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { PetContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const {\n    setIsLogin\n  } = useContext(PetContext);\n  const navigate = useNavigate();\n\n  //유효성 조건(yup)\n  const schema = yup.object({\n    email: yup.string().email(\"올바른 이메일 형식이 아닙니다.\").required(\"필수 입력입니다.\"),\n    password: yup.string().required(\"필수 입력입니다.\").matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?/~`\\-=|\\\\]).{10,16}$/, \"10~16자 대소문자+영문+특수 기호로 조합해주세요.\")\n  });\n\n  //폼 상태관리\n  const {\n    register,\n    //폼 필드와 리액트 훅 폼을 연결\n    watch,\n    //특정 watch(\"email\") 입력값들을 실시간 감시\n    handleSubmit,\n    trigger,\n    //실시간 검사\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onBlur\" // 실시간 검사\n  });\n\n  //로그인 버튼 클릭\n  const clickLogin = async () => {\n    const result = await MemberApi.login(watch(\"email\"), watch(\"password\"));\n    if (result.success) {\n      alert(\"로그인 성공!\");\n\n      //로그인 성공 시 localStorage에 id와 name이 담깁니다.\n      localStorage.setItem(\"loginId\", result.data.id);\n      localStorage.setItem(\"loginName\", result.data.name);\n      //전역변수에 로그인 여부 저장\n      setIsLogin(true);\n      navigate(\"/\");\n    } else {\n      alert(\"로그인 실패\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginComp, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(() => clickLogin()),\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"login_form\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                ...register(\"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_message\",\n                children: errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                ...register(\"password\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error_message\",\n                children: errors.password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"ZsdLqGiNyFY+nqCDOpVE5LLg98c=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","LoginComp","yupResolver","yup","MemberApi","useNavigate","useContext","PetContext","jsxDEV","_jsxDEV","Login","_s","setIsLogin","navigate","schema","object","email","string","required","password","matches","register","watch","handleSubmit","trigger","setValue","formState","errors","resolver","mode","clickLogin","result","login","success","alert","localStorage","setItem","data","id","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","message","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/page/auth/Login.jsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport LoginComp from \"./LoginStyle\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport MemberApi from \"../../api/MemberApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { PetContext } from \"../../App\";\r\nexport default function Login() {\r\n  const { setIsLogin } = useContext(PetContext);\r\n  const navigate = useNavigate();\r\n\r\n  //유효성 조건(yup)\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(\"올바른 이메일 형식이 아닙니다.\")\r\n      .required(\"필수 입력입니다.\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"필수 입력입니다.\")\r\n      .matches(\r\n        /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?/~`\\-=|\\\\]).{10,16}$/,\r\n        \"10~16자 대소문자+영문+특수 기호로 조합해주세요.\"\r\n      ),\r\n  });\r\n\r\n  //폼 상태관리\r\n  const {\r\n    register, //폼 필드와 리액트 훅 폼을 연결\r\n    watch, //특정 watch(\"email\") 입력값들을 실시간 감시\r\n    handleSubmit,\r\n    trigger, //실시간 검사\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: \"onBlur\", // 실시간 검사\r\n  });\r\n\r\n  //로그인 버튼 클릭\r\n  const clickLogin = async () => {\r\n    const result = await MemberApi.login(watch(\"email\"), watch(\"password\"));\r\n    if (result.success) {\r\n      alert(\"로그인 성공!\");\r\n\r\n      //로그인 성공 시 localStorage에 id와 name이 담깁니다.\r\n      localStorage.setItem(\"loginId\", result.data.id);\r\n      localStorage.setItem(\"loginName\", result.data.name);\r\n      //전역변수에 로그인 여부 저장\r\n      setIsLogin(true);\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(\"로그인 실패\");\r\n    }\r\n  };\r\n  return (\r\n    <LoginComp>\r\n      <div className=\"login_inner\">\r\n        <div className=\"login_container\">\r\n          <h2>로그인</h2>\r\n          <form onSubmit={handleSubmit(() => clickLogin())}>\r\n            <ul className=\"login_form\">\r\n              <li>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  {...register(\"email\")}\r\n                />\r\n                {errors.email && (\r\n                  <p className=\"error_message\">{errors.email.message}</p>\r\n                )}\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  {...register(\"password\")}\r\n                />\r\n                {errors.password && (\r\n                  <p className=\"error_message\">{errors.password.message}</p>\r\n                )}\r\n              </li>\r\n            </ul>\r\n            <button type=\"submit\">로그인</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </LoginComp>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAW,CAAC,GAAGN,UAAU,CAACC,UAAU,CAAC;EAC7C,MAAMM,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,MAAM,GAAGX,GAAG,CAACY,MAAM,CAAC;IACxBC,KAAK,EAAEb,GAAG,CACPc,MAAM,CAAC,CAAC,CACRD,KAAK,CAAC,mBAAmB,CAAC,CAC1BE,QAAQ,CAAC,WAAW,CAAC;IACxBC,QAAQ,EAAEhB,GAAG,CACVc,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,WAAW,CAAC,CACrBE,OAAO,CACN,oFAAoF,EACpF,+BACF;EACJ,CAAC,CAAC;;EAEF;EACA,MAAM;IACJC,QAAQ;IAAE;IACVC,KAAK;IAAE;IACPC,YAAY;IACZC,OAAO;IAAE;IACTC,QAAQ;IACRC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAG3B,OAAO,CAAC;IACV4B,QAAQ,EAAE1B,WAAW,CAACY,MAAM,CAAC;IAC7Be,IAAI,EAAE,QAAQ,CAAE;EAClB,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,MAAM,GAAG,MAAM3B,SAAS,CAAC4B,KAAK,CAACV,KAAK,CAAC,OAAO,CAAC,EAAEA,KAAK,CAAC,UAAU,CAAC,CAAC;IACvE,IAAIS,MAAM,CAACE,OAAO,EAAE;MAClBC,KAAK,CAAC,SAAS,CAAC;;MAEhB;MACAC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEL,MAAM,CAACM,IAAI,CAACC,EAAE,CAAC;MAC/CH,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEL,MAAM,CAACM,IAAI,CAACE,IAAI,CAAC;MACnD;MACA3B,UAAU,CAAC,IAAI,CAAC;MAChBC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLqB,KAAK,CAAC,QAAQ,CAAC;IACjB;EACF,CAAC;EACD,oBACEzB,OAAA,CAACR,SAAS;IAAAuC,QAAA,eACR/B,OAAA;MAAKgC,SAAS,EAAC,aAAa;MAAAD,QAAA,eAC1B/B,OAAA;QAAKgC,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9B/B,OAAA;UAAA+B,QAAA,EAAI;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZpC,OAAA;UAAMqC,QAAQ,EAAEvB,YAAY,CAAC,MAAMO,UAAU,CAAC,CAAC,CAAE;UAAAU,QAAA,gBAC/C/B,OAAA;YAAIgC,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACxB/B,OAAA;cAAA+B,QAAA,gBACE/B,OAAA;gBACEsC,IAAI,EAAC,OAAO;gBACZC,WAAW,EAAC,OAAO;gBAAA,GACf3B,QAAQ,CAAC,OAAO;cAAC;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC,EACDlB,MAAM,CAACX,KAAK,iBACXP,OAAA;gBAAGgC,SAAS,EAAC,eAAe;gBAAAD,QAAA,EAAEb,MAAM,CAACX,KAAK,CAACiC;cAAO;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CACvD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACLpC,OAAA;cAAA+B,QAAA,gBACE/B,OAAA;gBACEsC,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,UAAU;gBAAA,GAClB3B,QAAQ,CAAC,UAAU;cAAC;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,EACDlB,MAAM,CAACR,QAAQ,iBACdV,OAAA;gBAAGgC,SAAS,EAAC,eAAe;gBAAAD,QAAA,EAAEb,MAAM,CAACR,QAAQ,CAAC8B;cAAO;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAC1D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACLpC,OAAA;YAAQsC,IAAI,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAAClC,EAAA,CAlFuBD,KAAK;EAAA,QAEVL,WAAW,EAyBxBL,OAAO;AAAA;AAAAkD,EAAA,GA3BWxC,KAAK;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}