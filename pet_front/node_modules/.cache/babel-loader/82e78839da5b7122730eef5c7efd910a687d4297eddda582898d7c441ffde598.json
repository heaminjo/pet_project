{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\components\\\\Board\\\\BoardDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BoardDetailStyle from \"./BoardDetailStyle\";\nimport 'react-comments-section/dist/index.css';\nimport { CommentSection } from \"react-comments-section\";\n\n// jwt 토큰에서 로그인한 회원의 ID를 가져옴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getMemberIdFromToken(token) {\n  if (!token) return null;\n  try {\n    //1. 토큰을 .으로 분리\n    const base64Payload = token.split(\".\")[1];\n    //2. base64payload -> base64로 디코딩\n    const base64 = base64Payload.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    //3. base64 디코딩 (atob 사용)\n    const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(c => `%${(\"00\" + c.charCodeAt(0).toString(16)).slice(-2)}`).join(\"\"));\n    //4. JSON 파싱\n    const payload = JSON.parse(jsonPayload);\n    //5. member_id 반환\n    return payload.member_id || payload.sub || null;\n  } catch (e) {\n    return null;\n  }\n}\nexport default function BoardDetail() {\n  _s();\n  const {\n    category,\n    board_id\n  } = useParams(); // URL 파라미터에서 게시글 ID 추출\n  const [post, setPost] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`/board/boardDetail/${category}/${board_id}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(response => setPost(response.data)).catch(error => setError(error));\n  }, [category, board_id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4. \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  const token = localStorage.getItem(\"accessToken\");\n  const loginMemberId = getMemberIdFromToken(token); // JWT 토큰에서 로그인한 회원의 ID를 가져옴\n  //const loginRole = localStorage.getItem(\"role\"); // \"ADMIN\" 또는 \"USER\"\n\n  // 작성자(member_id) 또는 관리자(ADMIN)만 버튼 보이게\n  const canEditOrDelete = String(post.member_id) === String(loginMemberId) || localStorage.getItem(\"role\") === \"ROLE_ADMIN\";\n  console.log(\"board_Id:\", board_id);\n\n  // 삭제 기능\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        await axios.delete(`/board/delete/${post.board_id}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        alert(\"삭제되었습니다.\");\n        navigate(`/boardList/${category}`);\n      } catch (err) {\n        alert(\"삭제에 실패했습니다.\");\n      }\n    }\n  };\n\n  // 수정 기능 (수정 폼으로 이동)\n  const handleEdit = () => {\n    navigate(`/boardEditForm/${category}/${post.board_id}`, {\n      state: {\n        category: post.category || \"board\"\n      }\n    });\n  };\n  console.log(\"loginMemberId:\", loginMemberId, \"post.member_id:\", post.member_id);\n\n  // 댓글 기능을 위한 props 설정\n  const data = [{\n    userId: \"02b\",\n    comId: \"017\",\n    fullName: \"Lily\",\n    userProfile: \"https://www.linkedin.com/in/riya-negi-8879631a9/\",\n    text: \"I think you have a point🤔\",\n    avatarUrl: \"https://ui-avatars.com/api/name=Lily&background=random\",\n    replies: []\n  }];\n  const currentUser = {\n    currentUserId: loginMemberId,\n    currentUserImg: \"https://ui-avatars.com/api/name=Riya&background=random\",\n    currentUserProfile: \"https://www.linkedin.com/in/riya-negi-8879631a9/\",\n    currentUserFullName: post.name\n  };\n  return /*#__PURE__*/_jsxDEV(BoardDetailStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        height: \"80%\",\n        margin: \"40px auto\",\n        fontFamily: \"GmarketSansMedium\"\n      },\n      className: \"boardDetailContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#888\",\n          marginBottom: \"10px\"\n        },\n        children: [\"\\uC791\\uC131\\uC790: \", post.name, \" | \\uC870\\uD68C\\uC218: \", post.views, \" | \\uC791\\uC131\\uC77C: \", post.reg_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minHeight: \"200px\",\n          fontSize: \"18px\",\n          marginTop: \"20px\"\n        },\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), canEditOrDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"30px\",\n          textAlign: \"right\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CommentSection, {\n          currentUser: currentUser,\n          commentData: data,\n          onSubmitAction: data => console.log('check submit, ', data),\n          currentData: data => console.log('current data', data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardDetail, \"cMJFOnMFvEuXGfnEprC44M5TAaQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","BoardDetailStyle","CommentSection","jsxDEV","_jsxDEV","getMemberIdFromToken","token","base64Payload","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","member_id","sub","e","BoardDetail","_s","category","board_id","post","setPost","error","setError","navigate","get","headers","Authorization","localStorage","getItem","then","response","data","catch","children","message","fileName","_jsxFileName","lineNumber","columnNumber","loginMemberId","canEditOrDelete","String","console","log","handleDelete","window","confirm","delete","alert","err","handleEdit","state","userId","comId","fullName","userProfile","text","avatarUrl","replies","currentUser","currentUserId","currentUserImg","currentUserProfile","currentUserFullName","name","style","width","height","margin","fontFamily","className","title","color","marginBottom","views","reg_date","minHeight","fontSize","marginTop","content","textAlign","onClick","marginRight","commentData","onSubmitAction","currentData","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/BoardDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BoardDetailStyle from \"./BoardDetailStyle\";\r\nimport 'react-comments-section/dist/index.css';\r\nimport { CommentSection } from \"react-comments-section\";\r\n\r\n// jwt 토큰에서 로그인한 회원의 ID를 가져옴\r\nfunction getMemberIdFromToken(token) {\r\n  if (!token) return null;\r\n  try {\r\n    //1. 토큰을 .으로 분리\r\n    const base64Payload = token.split(\".\")[1];\r\n    //2. base64payload -> base64로 디코딩\r\n    const base64 = base64Payload.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    //3. base64 디코딩 (atob 사용)\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split(\"\")\r\n        .map((c) => `%${(\"00\" + c.charCodeAt(0).toString(16)).slice(-2)}`)\r\n        .join(\"\")\r\n    );\r\n    //4. JSON 파싱\r\n    const payload = JSON.parse(jsonPayload);\r\n    //5. member_id 반환\r\n    return payload.member_id || payload.sub || null;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default function BoardDetail() {\r\n  const { category, board_id } = useParams(); // URL 파라미터에서 게시글 ID 추출\r\n  const [post, setPost] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/board/boardDetail/${category}/${board_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n        },\r\n      })\r\n      .then((response) => setPost(response.data))\r\n      .catch((error) => setError(error));\r\n  }, [category, board_id]);\r\n\r\n  if (error) {\r\n    return <div>게시글을 불러오지 못했습니다. {error.message}</div>;\r\n  }\r\n\r\n  if (!post) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  const loginMemberId = getMemberIdFromToken(token); // JWT 토큰에서 로그인한 회원의 ID를 가져옴\r\n  //const loginRole = localStorage.getItem(\"role\"); // \"ADMIN\" 또는 \"USER\"\r\n\r\n  // 작성자(member_id) 또는 관리자(ADMIN)만 버튼 보이게\r\n  const canEditOrDelete = String(post.member_id) === String(loginMemberId) || localStorage.getItem(\"role\") === \"ROLE_ADMIN\";\r\n\r\n  console.log(\"board_Id:\", board_id);\r\n\r\n  // 삭제 기능\r\n  const handleDelete = async () => {\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      try {\r\n        await axios.delete(`/board/delete/${post.board_id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n          },\r\n        });\r\n        alert(\"삭제되었습니다.\");\r\n        navigate(`/boardList/${category}`);\r\n      } catch (err) {\r\n        alert(\"삭제에 실패했습니다.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // 수정 기능 (수정 폼으로 이동)\r\n  const handleEdit = () => {\r\n    navigate(`/boardEditForm/${category}/${post.board_id}`, {\r\n      state: { category: post.category || \"board\" },\r\n    });\r\n  };\r\n\r\n  console.log(\r\n    \"loginMemberId:\",\r\n    loginMemberId,\r\n    \"post.member_id:\",\r\n    post.member_id\r\n  );\r\n\r\n  // 댓글 기능을 위한 props 설정\r\n  const data = [\r\n    {\r\n      userId: \"02b\",\r\n      comId: \"017\",\r\n      fullName: \"Lily\",\r\n      userProfile: \"https://www.linkedin.com/in/riya-negi-8879631a9/\",\r\n      text: \"I think you have a point🤔\",\r\n      avatarUrl: \"https://ui-avatars.com/api/name=Lily&background=random\",\r\n      replies: [],\r\n    },\r\n  ];\r\n  \r\n  const currentUser = {\r\n    currentUserId: loginMemberId,\r\n    currentUserImg: \"https://ui-avatars.com/api/name=Riya&background=random\",\r\n    currentUserProfile: \"https://www.linkedin.com/in/riya-negi-8879631a9/\",\r\n    currentUserFullName: post.name,\r\n  };\r\n\r\n  return (\r\n    <BoardDetailStyle>\r\n      <div\r\n        style={{\r\n          width: \"50%\",\r\n          height: \"80%\",\r\n          margin: \"40px auto\",\r\n          fontFamily: \"GmarketSansMedium\",\r\n        }}\r\n        className=\"boardDetailContainer\"\r\n      >\r\n        <h2>{post.title}</h2>\r\n        <div style={{ color: \"#888\", marginBottom: \"10px\" }}>\r\n          작성자: {post.name} | 조회수: {post.views} | 작성일: {post.reg_date}\r\n        </div>\r\n        <div\r\n          style={{ minHeight: \"200px\", fontSize: \"18px\", marginTop: \"20px\" }}\r\n        >\r\n          {post.content}\r\n        </div>\r\n        {canEditOrDelete && (\r\n          <div style={{ marginTop: \"30px\", textAlign: \"right\" }}>\r\n            <button onClick={handleEdit} style={{ marginRight: \"10px\" }}>\r\n              수정\r\n            </button>\r\n            <button onClick={handleDelete}>삭제</button>\r\n          </div>\r\n        )}\r\n        <br></br>\r\n        <hr></hr>\r\n        <div>\r\n          <CommentSection\r\n            currentUser={currentUser}\r\n            commentData={data}\r\n            onSubmitAction={data => console.log('check submit, ', data)}\r\n            currentData={data => console.log('current data', data)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BoardDetailStyle>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}