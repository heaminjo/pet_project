{"ast":null,"code":"import { useState } from 'react';\nvar useClick = function useClick(state, onToggle) {\n  if (process.env.NODE_ENV !== 'production' && typeof onToggle !== 'function') {\n    throw new Error('[React-Menu] useClick/useHover requires a function in the second parameter.');\n  }\n  var _useState = useState({}),\n    skipOpen = _useState[0];\n  return {\n    onMouseDown: function onMouseDown() {\n      skipOpen.v = state && state !== 'closed';\n    },\n    onClick: function onClick(e) {\n      return skipOpen.v ? skipOpen.v = false : onToggle(true, e);\n    }\n  };\n};\nexport { useClick };","map":{"version":3,"names":["useState","useClick","state","onToggle","process","env","NODE_ENV","Error","_useState","skipOpen","onMouseDown","v","onClick","e"],"sources":["C:/devv/pet_project/pet_front/node_modules/@szhsin/react-menu/dist/es/hooks/useClick.js"],"sourcesContent":["import { useState } from 'react';\n\nvar useClick = function useClick(state, onToggle) {\n  if (process.env.NODE_ENV !== 'production' && typeof onToggle !== 'function') {\n    throw new Error('[React-Menu] useClick/useHover requires a function in the second parameter.');\n  }\n  var _useState = useState({}),\n    skipOpen = _useState[0];\n  return {\n    onMouseDown: function onMouseDown() {\n      skipOpen.v = state && state !== 'closed';\n    },\n    onClick: function onClick(e) {\n      return skipOpen.v ? skipOpen.v = false : onToggle(true, e);\n    }\n  };\n};\n\nexport { useClick };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAChD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,OAAOH,QAAQ,KAAK,UAAU,EAAE;IAC3E,MAAM,IAAII,KAAK,CAAC,6EAA6E,CAAC;EAChG;EACA,IAAIC,SAAS,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1BS,QAAQ,GAAGD,SAAS,CAAC,CAAC,CAAC;EACzB,OAAO;IACLE,WAAW,EAAE,SAASA,WAAWA,CAAA,EAAG;MAClCD,QAAQ,CAACE,CAAC,GAAGT,KAAK,IAAIA,KAAK,KAAK,QAAQ;IAC1C,CAAC;IACDU,OAAO,EAAE,SAASA,OAAOA,CAACC,CAAC,EAAE;MAC3B,OAAOJ,QAAQ,CAACE,CAAC,GAAGF,QAAQ,CAACE,CAAC,GAAG,KAAK,GAAGR,QAAQ,CAAC,IAAI,EAAEU,CAAC,CAAC;IAC5D;EACF,CAAC;AACH,CAAC;AAED,SAASZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}