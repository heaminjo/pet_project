{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\components\\\\Board\\\\NoticeBoardDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NoticeBoardDetailStyle from \"./NoticeBoardDetailStyle\";\n\n// jwt 토큰에서 로그인한 회원의 ID를 가져옴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getMemberIdFromToken(token) {\n  if (!token) return null;\n  try {\n    //1. 토큰을 .으로 분리\n    const base64Payload = token.split('.')[1];\n    //2. base64payload -> base64로 디코딩 \n    const base64 = base64Payload.replace(/-/g, '+').replace(/_/g, '/');\n    //3. base64 디코딩 (atob 사용)\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => `%${('00' + c.charCodeAt(0).toString(16)).slice(-2)}`).join(''));\n    //4. JSON 파싱\n    const payload = JSON.parse(jsonPayload);\n    //5. member_id 반환\n    return payload.member_id || payload.sub || null;\n  } catch (e) {\n    return null;\n  }\n}\nexport default function BoardDetail() {\n  _s();\n  const {\n    board_id\n  } = useParams(); // URL 파라미터에서 게시글 ID 추출\n  const [post, setPost] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`/board/noticeboardDetail/${board_id}`, {\n      headers: {\n        Authorization: `${localStorage.getItem(\"grantType\")} ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(response => setPost(response.data)).catch(error => setError(error));\n  }, [board_id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4. \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  const token = localStorage.getItem(\"accessToken\");\n  const loginMemberId = getMemberIdFromToken(token); // JWT 토큰에서 로그인한 회원의 ID를 가져옴\n  //const loginRole = localStorage.getItem(\"role\"); // \"ADMIN\" 또는 \"USER\"\n\n  // 작성자(member_id) 또는 관리자(ADMIN)만 버튼 보이게\n  const canEditOrDelete = String(post.member_id) === String(loginMemberId); // || loginRole === \"ADMIN\"\n\n  console.log(\"board_Id:\", board_id);\n\n  // 삭제 기능\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        await axios.delete(`/board/delete/${post.board_id}`, {\n          headers: {\n            Authorization: `${localStorage.getItem(\"grantType\")} ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        alert(\"삭제되었습니다.\");\n        navigate(\"/boardList\");\n      } catch (err) {\n        alert(\"삭제에 실패했습니다.\");\n      }\n    }\n  };\n\n  // 수정 기능 (수정 폼으로 이동)\n  const handleEdit = () => {\n    navigate(`/boardEditForm/${post.board_id}`);\n  };\n  console.log(\"loginMemberId:\", loginMemberId, \"post.member_id:\", post.member_id);\n  return /*#__PURE__*/_jsxDEV(NoticeBoardDetailStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"60%\",\n        margin: \"40px auto\",\n        fontFamily: \"GmarketSansMedium\"\n      },\n      className: \"boardDetailContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#888\",\n          marginBottom: \"10px\"\n        },\n        children: [\"\\uC791\\uC131\\uC790: \", post.name, \" | \\uC870\\uD68C\\uC218: \", post.views, \" | \\uC791\\uC131\\uC77C: \", post.reg_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minHeight: \"200px\",\n          fontSize: \"18px\",\n          marginTop: \"20px\"\n        },\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), canEditOrDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"30px\",\n          textAlign: \"right\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardDetail, \"WmAGcBzFjNs3ZOJmAzneIVBiO4s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","NoticeBoardDetailStyle","jsxDEV","_jsxDEV","getMemberIdFromToken","token","base64Payload","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","member_id","sub","e","BoardDetail","_s","board_id","post","setPost","error","setError","navigate","get","headers","Authorization","localStorage","getItem","then","response","data","catch","children","message","fileName","_jsxFileName","lineNumber","columnNumber","loginMemberId","canEditOrDelete","String","console","log","handleDelete","window","confirm","delete","alert","err","handleEdit","style","width","margin","fontFamily","className","title","color","marginBottom","name","views","reg_date","minHeight","fontSize","marginTop","content","textAlign","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/components/Board/NoticeBoardDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NoticeBoardDetailStyle from \"./NoticeBoardDetailStyle\";\r\n\r\n\r\n  // jwt 토큰에서 로그인한 회원의 ID를 가져옴\r\n  function getMemberIdFromToken(token) {\r\n    if(!token) return null;\r\n    try {\r\n      //1. 토큰을 .으로 분리\r\n      const base64Payload = token.split('.')[1];\r\n      //2. base64payload -> base64로 디코딩 \r\n      const base64 = base64Payload.replace(/-/g, '+').replace(/_/g, '/');\r\n      //3. base64 디코딩 (atob 사용)\r\n      const jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n          .split('')\r\n          .map(c => `%${('00' + c.charCodeAt(0).toString(16)).slice(-2)}`)\r\n          .join('')\r\n      );\r\n      //4. JSON 파싱\r\n      const payload = JSON.parse(jsonPayload);\r\n      //5. member_id 반환\r\n      return payload.member_id || payload.sub || null;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }  \r\n\r\n\r\nexport default function BoardDetail() { \r\n  const { board_id } = useParams(); // URL 파라미터에서 게시글 ID 추출\r\n  const [post, setPost] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get(`/board/noticeboardDetail/${board_id}`,\r\n      {\r\n        headers: {\r\n          Authorization: `${localStorage.getItem(\"grantType\")} ${localStorage.getItem(\"accessToken\")}`\r\n        }\r\n      }\r\n    )\r\n      .then(response => setPost(response.data))\r\n      .catch(error => setError(error));\r\n  }, [board_id]);\r\n\r\n  if (error) {\r\n    return <div>게시글을 불러오지 못했습니다. {error.message}</div>;\r\n  }\r\n  \r\n  if (!post) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  const loginMemberId = getMemberIdFromToken(token); // JWT 토큰에서 로그인한 회원의 ID를 가져옴\r\n  //const loginRole = localStorage.getItem(\"role\"); // \"ADMIN\" 또는 \"USER\"\r\n\r\n  // 작성자(member_id) 또는 관리자(ADMIN)만 버튼 보이게\r\n  const canEditOrDelete = String(post.member_id) === String(loginMemberId); // || loginRole === \"ADMIN\"\r\n\r\n  console.log(\"board_Id:\", board_id);\r\n\r\n   // 삭제 기능\r\n  const handleDelete = async () => {\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      try {\r\n        await axios.delete(`/board/delete/${post.board_id}`, {\r\n          headers: {\r\n            Authorization: `${localStorage.getItem(\"grantType\")} ${localStorage.getItem(\"accessToken\")}`\r\n          }\r\n        });\r\n        alert(\"삭제되었습니다.\");\r\n        navigate(\"/boardList\");\r\n      } catch (err) {\r\n        alert(\"삭제에 실패했습니다.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // 수정 기능 (수정 폼으로 이동)\r\n  const handleEdit = () => {\r\n    navigate(`/boardEditForm/${post.board_id}`);\r\n  };\r\n\r\n  console.log(\"loginMemberId:\", loginMemberId, \"post.member_id:\", post.member_id);\r\n\r\n  return (\r\n    <NoticeBoardDetailStyle>\r\n      <div style={{ width: \"60%\", margin: \"40px auto\", fontFamily: \"GmarketSansMedium\" }} className=\"boardDetailContainer\">\r\n        <h2>{post.title}</h2>\r\n        <div style={{ color: \"#888\", marginBottom: \"10px\" }}>\r\n          작성자: {post.name} | 조회수: {post.views} | 작성일: {post.reg_date}\r\n        </div>\r\n        <div style={{ minHeight: \"200px\", fontSize: \"18px\", marginTop: \"20px\" }}>\r\n          {post.content}\r\n        </div>\r\n        {canEditOrDelete && (\r\n          <div style={{ marginTop: \"30px\", textAlign: \"right\" }}>\r\n            <button onClick={handleEdit} style={{ marginRight: \"10px\" }}>수정</button>\r\n            <button onClick={handleDelete}>삭제</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </NoticeBoardDetailStyle>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}