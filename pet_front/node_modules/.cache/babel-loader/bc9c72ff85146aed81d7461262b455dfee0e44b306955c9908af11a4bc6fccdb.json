{"ast":null,"code":"var _jsxFileName = \"C:\\\\devv\\\\pet_project\\\\pet_front\\\\src\\\\page\\\\main\\\\Main.jsx\";\nimport { useEffect } from \"react\";\nimport MainComp from \"./MainStyle\";\nimport Banner from \"../../components/main/Banner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  const kakao = async () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\");\n    if (!code) return;\n    try {\n      const response = await fetch(`http://localhost:8080/kakao/login?code=${code}`, {\n        method: \"GET\",\n        credentials: \"include\" // 쿠키 받을 때 필요하면 추가\n      });\n      const result = await response.json();\n      if (result.success) {\n        const accessToken = result.data.accessToken; // ApiResponse<TokenDTO> 구조에 맞게\n        // 예) localStorage에 저장\n        localStorage.setItem(\"loginName\", result.data.memberName);\n        localStorage.setItem(\"accessToken\", result.data.accessToken);\n        localStorage.setItem(\"role\", result.data.role);\n        // 로그인 성공 처리(리다이렉트 등)\n      } else {\n        console.error(\"로그인 실패:\", result.message);\n      }\n    } catch (err) {\n      console.error(\"로그인 처리 중 에러:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainComp, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainInner\",\n      children: /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","MainComp","Banner","jsxDEV","_jsxDEV","Main","kakao","params","URLSearchParams","window","location","search","code","get","response","fetch","method","credentials","result","json","success","accessToken","data","localStorage","setItem","memberName","role","console","error","message","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/devv/pet_project/pet_front/src/page/main/Main.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport MainComp from \"./MainStyle\";\r\nimport Banner from \"../../components/main/Banner\";\r\n\r\nexport default function Main() {\r\n  const kakao = async () => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const code = params.get(\"code\");\r\n\r\n    if (!code) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/kakao/login?code=${code}`,\r\n        {\r\n          method: \"GET\",\r\n          credentials: \"include\", // 쿠키 받을 때 필요하면 추가\r\n        }\r\n      );\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        const accessToken = result.data.accessToken; // ApiResponse<TokenDTO> 구조에 맞게\r\n        // 예) localStorage에 저장\r\n        localStorage.setItem(\"loginName\", result.data.memberName);\r\n        localStorage.setItem(\"accessToken\", result.data.accessToken);\r\n        localStorage.setItem(\"role\", result.data.role);\r\n        // 로그인 성공 처리(리다이렉트 등)\r\n      } else {\r\n        console.error(\"로그인 실패:\", result.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"로그인 처리 중 에러:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainComp>\r\n      <div className=\"mainInner\">\r\n        <Banner />\r\n      </div>\r\n    </MainComp>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC1D,MAAMC,IAAI,GAAGL,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC;IAE/B,IAAI,CAACD,IAAI,EAAE;IAEX,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0CAA0CH,IAAI,EAAE,EAChD;QACEI,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS,CAAE;MAC1B,CACF,CAAC;MACD,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACE,OAAO,EAAE;QAClB,MAAMC,WAAW,GAAGH,MAAM,CAACI,IAAI,CAACD,WAAW,CAAC,CAAC;QAC7C;QACAE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEN,MAAM,CAACI,IAAI,CAACG,UAAU,CAAC;QACzDF,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,MAAM,CAACI,IAAI,CAACD,WAAW,CAAC;QAC5DE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,MAAM,CAACI,IAAI,CAACI,IAAI,CAAC;QAC9C;MACF,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEV,MAAM,CAACW,OAAO,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEE,GAAG,CAAC;IACpC;EACF,CAAC;EAED,oBACE1B,OAAA,CAACH,QAAQ;IAAA8B,QAAA,eACP3B,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxB3B,OAAA,CAACF,MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf;AAACC,EAAA,GAvCuBhC,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}