{"ast":null,"code":"// import { useNavigate, useParams } from 'react-router-dom';\n// import GoodsComp from './GoodsStyle';\n// import { useEffect, useState } from 'react';\n// import GoodsApi from '../../../api/GoodsApi';\n\n// export default function Goods() {\n//   const navigate = useNavigate();\n//   const goodsImg = process.env.PUBLIC_URL + '/images/pic1.png';\n//   // form의 input 값들을 state로 관리하고\n//   //submit 버튼 클릭 시 axios.post()로 데이터 전송\n//   const [goods, setGoods] = useState({\n//     // input 값 연결용\n//     goods_name: '',\n//     image_file: '',\n//     category_id: '',\n//     goods_state: 'SALE',\n//     description: '',\n//     quantity: '',\n//     price: '',\n//   });\n\n//   const register = async (e) => {\n//     e.preventDefault(); // form 기본 제출 막기\n//     const response = GoodsApi.regGoods(goods);\n//     console.log('등록 결과:', response);\n//     navigate('/');\n//   };\n\n//   return (\n//     <GoodsComp>\n//       <div className='container'>\n//         <h2>[관리자 페이지] 상품등록 페이지</h2>\n//         <span>설명: 관리자가 상품에 대한 상세정보를 입력하고 등록하는 페이지</span>\n//         <hr />\n//         <div className='register-form'>\n//           <div className='left'>\n//             <form onSubmit={register} method='post'>\n//               <table>\n//                 <tbody>\n//                   <tr>\n//                     <td>상품명</td>\n//                     <td>\n//                       <input type='text' value={goods.goods_name} onChange={(e) => setGoods({ ...goods, goods_name: e.target.value })} />\n//                     </td>\n//                   </tr>\n//                   <tr>\n//                     <td>상품이미지</td>\n//                     <td>\n//                       <input type='text' value={goodsImg} readOnly />\n//                       <button onClick={() => {}}>등록</button>\n//                     </td>\n//                   </tr>\n//                   <tr>\n//                     <td>카테고리</td>\n//                     <td>\n//                       <select value={goods.category_id} onChange={(e) => setGoods({ ...goods, category_id: e.target.value })}>\n//                         <option value=''> 선택 </option>\n//                         <option value='1'>1 : 사료</option>\n//                         <option value='2'>2 : 간식</option>\n//                         <option value='3'>3 : 장난감</option>\n//                       </select>\n//                     </td>\n//                   </tr>\n//                   <tr>\n//                     <td>상품 Description</td>\n//                     <td>\n//                       <input type='text' value={goods.description} onChange={(e) => setGoods({ ...goods, description: e.target.value })} />\n//                     </td>\n//                   </tr>\n//                   <tr>\n//                     <td>상태(SALE, SOLDOUT, HIDDEN)</td>\n//                     <td>\n//                       <select value={goods.goods_state} onChange={(e) => setGoods({ ...goods, goods_state: e.target.value })}>\n//                         <option value='SALE'>SALE</option>\n//                         <option value='SOLDOUT'>SOLDOUT</option>\n//                         <option value='HIDDEN'>HIDDEN</option>\n//                       </select>\n//                     </td>\n//                   </tr>\n//                   <tr>\n//                     <td>기본 판매 수량(단위)</td>\n//                     <td>\n//                       <input type='text' value={goods.quantity} onChange={(e) => setGoods({ ...goods, quantity: e.target.value })} /> &nbsp;&nbsp;\n//                     </td>\n//                   </tr>\n//                   <tr>\n//                     <td>판매 가격</td>\n//                     <td>\n//                       <input type='text' value={goods.price} onChange={(e) => setGoods({ ...goods, price: e.target.value })} /> &nbsp;&nbsp;\n//                     </td>\n//                   </tr>\n//                   <tr id='tr_btn'>\n//                     <td></td>\n//                     <td>\n//                       <button className='btn' id='sub_btn' type='submit'>\n//                         등록\n//                       </button>\n//                       <button className='btn' id='reset_btn' type='reset'>\n//                         취소\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 </tbody>\n//               </table>\n//             </form>\n//           </div>\n//           <div className='right'>\n//             <img src={goodsImg} alt='' className='goodsImg' />\n//             <br />\n//             상품이미지 미리보기\n//           </div>\n//         </div>\n//         <hr />\n//       </div>\n//     </GoodsComp>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/devv/pet_project/pet_front/src/components/Layout/goods/Goods.jsx"],"sourcesContent":["// import { useNavigate, useParams } from 'react-router-dom';\r\n// import GoodsComp from './GoodsStyle';\r\n// import { useEffect, useState } from 'react';\r\n// import GoodsApi from '../../../api/GoodsApi';\r\n\r\n// export default function Goods() {\r\n//   const navigate = useNavigate();\r\n//   const goodsImg = process.env.PUBLIC_URL + '/images/pic1.png';\r\n//   // form의 input 값들을 state로 관리하고\r\n//   //submit 버튼 클릭 시 axios.post()로 데이터 전송\r\n//   const [goods, setGoods] = useState({\r\n//     // input 값 연결용\r\n//     goods_name: '',\r\n//     image_file: '',\r\n//     category_id: '',\r\n//     goods_state: 'SALE',\r\n//     description: '',\r\n//     quantity: '',\r\n//     price: '',\r\n//   });\r\n\r\n//   const register = async (e) => {\r\n//     e.preventDefault(); // form 기본 제출 막기\r\n//     const response = GoodsApi.regGoods(goods);\r\n//     console.log('등록 결과:', response);\r\n//     navigate('/');\r\n//   };\r\n\r\n//   return (\r\n//     <GoodsComp>\r\n//       <div className='container'>\r\n//         <h2>[관리자 페이지] 상품등록 페이지</h2>\r\n//         <span>설명: 관리자가 상품에 대한 상세정보를 입력하고 등록하는 페이지</span>\r\n//         <hr />\r\n//         <div className='register-form'>\r\n//           <div className='left'>\r\n//             <form onSubmit={register} method='post'>\r\n//               <table>\r\n//                 <tbody>\r\n//                   <tr>\r\n//                     <td>상품명</td>\r\n//                     <td>\r\n//                       <input type='text' value={goods.goods_name} onChange={(e) => setGoods({ ...goods, goods_name: e.target.value })} />\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <td>상품이미지</td>\r\n//                     <td>\r\n//                       <input type='text' value={goodsImg} readOnly />\r\n//                       <button onClick={() => {}}>등록</button>\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <td>카테고리</td>\r\n//                     <td>\r\n//                       <select value={goods.category_id} onChange={(e) => setGoods({ ...goods, category_id: e.target.value })}>\r\n//                         <option value=''> 선택 </option>\r\n//                         <option value='1'>1 : 사료</option>\r\n//                         <option value='2'>2 : 간식</option>\r\n//                         <option value='3'>3 : 장난감</option>\r\n//                       </select>\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <td>상품 Description</td>\r\n//                     <td>\r\n//                       <input type='text' value={goods.description} onChange={(e) => setGoods({ ...goods, description: e.target.value })} />\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <td>상태(SALE, SOLDOUT, HIDDEN)</td>\r\n//                     <td>\r\n//                       <select value={goods.goods_state} onChange={(e) => setGoods({ ...goods, goods_state: e.target.value })}>\r\n//                         <option value='SALE'>SALE</option>\r\n//                         <option value='SOLDOUT'>SOLDOUT</option>\r\n//                         <option value='HIDDEN'>HIDDEN</option>\r\n//                       </select>\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <td>기본 판매 수량(단위)</td>\r\n//                     <td>\r\n//                       <input type='text' value={goods.quantity} onChange={(e) => setGoods({ ...goods, quantity: e.target.value })} /> &nbsp;&nbsp;\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr>\r\n//                     <td>판매 가격</td>\r\n//                     <td>\r\n//                       <input type='text' value={goods.price} onChange={(e) => setGoods({ ...goods, price: e.target.value })} /> &nbsp;&nbsp;\r\n//                     </td>\r\n//                   </tr>\r\n//                   <tr id='tr_btn'>\r\n//                     <td></td>\r\n//                     <td>\r\n//                       <button className='btn' id='sub_btn' type='submit'>\r\n//                         등록\r\n//                       </button>\r\n//                       <button className='btn' id='reset_btn' type='reset'>\r\n//                         취소\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 </tbody>\r\n//               </table>\r\n//             </form>\r\n//           </div>\r\n//           <div className='right'>\r\n//             <img src={goodsImg} alt='' className='goodsImg' />\r\n//             <br />\r\n//             상품이미지 미리보기\r\n//           </div>\r\n//         </div>\r\n//         <hr />\r\n//       </div>\r\n//     </GoodsComp>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}