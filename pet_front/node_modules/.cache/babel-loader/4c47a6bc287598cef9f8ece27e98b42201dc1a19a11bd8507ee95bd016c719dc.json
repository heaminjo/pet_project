{"ast":null,"code":"import axios from 'axios';\nconst KH_DOMAIN = 'http://localhost:8080';\nconst GoodsApi = {\n  // 장바구니 추가\n  addToCart: async () => {\n    const result = await axios.post(`${KH_DOMAIN}/goods/add`, {\n      headers: {\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`\n      }\n    });\n    return result.data;\n  },\n  // 결제\n  pay: async () => {\n    const result = await axios.post(`${KH_DOMAIN}/pay`, {\n      headers: {\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`\n      }\n    });\n    return result.data;\n  },\n  // 장바구니 출력\n  cartList: async () => {\n    // alert('GoodsApi의 cart 호출됨');\n    //   headers = { 'Content-Type': 'multipart/form-data' }; // 'application/json'\n    const result = await axios.get(`${KH_DOMAIN}/cart/list`, {\n      headers: {\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`\n      }\n    });\n    // alert(`GoodsApi의 cart 호출완료 => ${JSON.stringify(result.data)} `);\n    return result.data;\n  },\n  // 상품등록\n  regGoods: async goods => {\n    try {\n      const result = await axios.post(`${KH_DOMAIN}/goods/register`, goods, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`\n        }\n      });\n      if (result.data != null) {\n        alert(`상품등록 완료 => ${result.data}`);\n        return result.data;\n      }\n    } catch (err) {\n      console.error('상품 등록 실패:', err);\n      alert('상품 등록 중 에러가 발생했습니다.');\n    }\n  },\n  // 주문등록\n\n  order: async () => {\n    const result = await axios.post(`${KH_DOMAIN}/goods/add`, {\n      headers: {\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`\n      }\n    });\n    return result.data;\n  }\n};\nexport default GoodsApi;","map":{"version":3,"names":["axios","KH_DOMAIN","GoodsApi","addToCart","result","post","headers","Authorization","localStorage","getItem","data","pay","cartList","get","regGoods","goods","alert","err","console","error","order"],"sources":["C:/devv/pet_project/pet_front/src/api/GoodsApi.js"],"sourcesContent":["import axios from 'axios';\r\nconst KH_DOMAIN = 'http://localhost:8080';\r\nconst GoodsApi = {\r\n  // 장바구니 추가\r\n  addToCart: async () => {\r\n    const result = await axios.post(`${KH_DOMAIN}/goods/add`, {\r\n      headers: {\r\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\r\n      },\r\n    });\r\n\r\n    return result.data;\r\n  },\r\n\r\n  // 결제\r\n  pay: async () => {\r\n    const result = await axios.post(`${KH_DOMAIN}/pay`, {\r\n      headers: {\r\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\r\n      },\r\n    });\r\n\r\n    return result.data;\r\n  },\r\n\r\n  // 장바구니 출력\r\n  cartList: async () => {\r\n    // alert('GoodsApi의 cart 호출됨');\r\n    //   headers = { 'Content-Type': 'multipart/form-data' }; // 'application/json'\r\n    const result = await axios.get(`${KH_DOMAIN}/cart/list`, {\r\n      headers: {\r\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\r\n      },\r\n    });\r\n    // alert(`GoodsApi의 cart 호출완료 => ${JSON.stringify(result.data)} `);\r\n    return result.data;\r\n  },\r\n\r\n  // 상품등록\r\n  regGoods: async (goods) => {\r\n    try {\r\n      const result = await axios.post(`${KH_DOMAIN}/goods/register`, goods, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\r\n        },\r\n      });\r\n      if (result.data != null) {\r\n        alert(`상품등록 완료 => ${result.data}`);\r\n        return result.data;\r\n      }\r\n    } catch (err) {\r\n      console.error('상품 등록 실패:', err);\r\n      alert('상품 등록 중 에러가 발생했습니다.');\r\n    }\r\n  },\r\n\r\n  // 주문등록\r\n\r\n  order: async () => {\r\n    const result = await axios.post(`${KH_DOMAIN}/goods/add`, {\r\n      headers: {\r\n        Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\r\n      },\r\n    });\r\n\r\n    return result.data;\r\n  },\r\n};\r\n\r\nexport default GoodsApi;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,SAAS,GAAG,uBAAuB;AACzC,MAAMC,QAAQ,GAAG;EACf;EACAC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAMC,MAAM,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,SAAS,YAAY,EAAE;MACxDK,OAAO,EAAE;QACPC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC5F;IACF,CAAC,CAAC;IAEF,OAAOL,MAAM,CAACM,IAAI;EACpB,CAAC;EAED;EACAC,GAAG,EAAE,MAAAA,CAAA,KAAY;IACf,MAAMP,MAAM,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,SAAS,MAAM,EAAE;MAClDK,OAAO,EAAE;QACPC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC5F;IACF,CAAC,CAAC;IAEF,OAAOL,MAAM,CAACM,IAAI;EACpB,CAAC;EAED;EACAE,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB;IACA;IACA,MAAMR,MAAM,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,SAAS,YAAY,EAAE;MACvDK,OAAO,EAAE;QACPC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC5F;IACF,CAAC,CAAC;IACF;IACA,OAAOL,MAAM,CAACM,IAAI;EACpB,CAAC;EAED;EACAI,QAAQ,EAAE,MAAOC,KAAK,IAAK;IACzB,IAAI;MACF,MAAMX,MAAM,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,SAAS,iBAAiB,EAAEc,KAAK,EAAE;QACpET,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QAC5F;MACF,CAAC,CAAC;MACF,IAAIL,MAAM,CAACM,IAAI,IAAI,IAAI,EAAE;QACvBM,KAAK,CAAC,cAAcZ,MAAM,CAACM,IAAI,EAAE,CAAC;QAClC,OAAON,MAAM,CAACM,IAAI;MACpB;IACF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEF,GAAG,CAAC;MAC/BD,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED;;EAEAI,KAAK,EAAE,MAAAA,CAAA,KAAY;IACjB,MAAMhB,MAAM,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,SAAS,YAAY,EAAE;MACxDK,OAAO,EAAE;QACPC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC5F;IACF,CAAC,CAAC;IAEF,OAAOL,MAAM,CAACM,IAAI;EACpB;AACF,CAAC;AAED,eAAeR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}