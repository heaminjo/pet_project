{"ast":null,"code":"// import PayComp from './PayStyle';\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import MemberApi from '../../../api/MemberApi';\n// import GoodsApi from '../../../api/GoodsApi';\n\n// export default function Pay() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [goods, setGoods] = useState([]);\n\n//   // const goodsList = location.state?.goods || []; // Order -> Pay 이동위해 변경 (rawGoods 추가)\n//   const rawGoods = location.state?.goods;\n//   const goodsList = Array.isArray(rawGoods) ? rawGoods : rawGoods ? [rawGoods] : []; // 단일 상품이 오더라도 강제로 배열로 감싸기\n\n//   const quantities = location.state?.quantity || [];\n//   const [payment, setPayment] = useState();\n//   const goodsImg = process.env.PUBLIC_URL + '/images/pic1.png';\n\n//   const [member, setMember] = useState([]);\n\n//   // 사용자(구매자) 정보\n//   const memdetail = async () => {\n//     MemberApi.detail()\n//       .then((response) => {\n//         setMember(response);\n//       })\n//       .catch((err) => {});\n//   };\n\n//   // 사용자의 주소정보 (추가예정)\n\n//   // 총 구매가격\n//   const totalPrice = goodsList.reduce((acc, item) => {\n//     const price = item.price || 0;\n//     const quantity = item.quantity || 1;\n//     return acc + price * quantity;\n//   }, 0);\n//   // 배달료\n//   const deliverPrice = 3000;\n\n//   // 결제 로직 수행(BackEnd)\n//   const pay = async (goods, payment) => {\n//     const payload = {\n//       goodsList: goods,\n//       payment: payment,\n//     };\n//     alert('pay 동작테스트');\n//     GoodsApi.pay(payload) // 여기가 호출\n//       .then((response) => {\n//         alert('GoodsApi.pay() 성공');\n//         navigate('/user/orderdetail');\n//       })\n//       .catch((err) => {\n//         alert('GoodsApi.pay() 에러');\n//       });\n//   };\n\n//   // 걸제수단 핸들링\n//   const handlePaymentChange = (e) => {\n//     setPayment(e.target.value);\n//   };\n\n//   useEffect(() => {\n//     console.log('goodsList:', goodsList);\n//    //  memdetail();\n//     setGoods(goodsList);\n//   }, [goodsList]);\n\n//   return (\n//     <PayComp>\n//       <div className='container'>\n//         <section>\n//           <h2>구 매 자</h2>\n//           <hr />\n//           <div className='title'>구매자</div>\n//           <table className='payment'>\n//             <tbody>\n//               <tr>\n//                 <th>이름</th>\n//                 <td>{member.name}</td>\n//               </tr>\n//               <tr>\n//                 <th>이메일</th>\n//                 <td>{member.email}</td>\n//               </tr>\n//               <tr>\n//                 <th>연락처</th>\n//                 <td>{member.phone}</td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </section>\n//         <br />\n//         <section>\n//           <h2>배 송 지</h2>\n//           <hr />\n//           <div className='title'>\n//             수령인&nbsp;&nbsp; <button onClick={() => {}}>수정</button>\n//           </div>\n//           <table>\n//             <tbody>\n//               <tr>\n//                 <th>이름</th>\n//                 <td>{member.name}</td>\n//               </tr>\n//               <tr>\n//                 <th>배송지</th>\n//                 <td>경기 성남시</td>\n//               </tr>\n//               <tr>\n//                 <th>연락처</th>\n//                 <td>{member.phone}</td>\n//               </tr>\n//               <tr>\n//                 <th>요청사항</th>\n//                 <td>\n//                   문 앞(직접수령) &nbsp;&nbsp; <button>수정</button>\n//                 </td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </section>\n//         <br />\n//         <section>\n//           <h2>구 매 목 록</h2>\n//           <hr />\n//           <div className='title'>상품정보</div>\n//           {goods.map((item, index) => (\n//             <div className='goodslist' key={index}>\n//               <div>\n//                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                 {item.goods_name}\n//                 {', '}\n//                 {item.description}\n//                 {', '}\n//                 {item.quantity}\n//                 {' 개'}\n//               </div>\n//             </div>\n//           ))}\n//         </section>\n//         <br />\n//         <section>\n//           <h2>결 제</h2>\n//           <hr />\n//           <div className='title'>결제 정보</div>\n//           <table>\n//             <tbody>\n//               <tr>\n//                 <th>상품 가격</th>\n//                 <td>{totalPrice} 원</td>\n//               </tr>\n//               <tr>\n//                 <th>배송비</th>\n//                 <td>{deliverPrice} 원</td>\n//               </tr>\n//               <tr>\n//                 <th>최종결제금액</th>\n//                 <td>{totalPrice + deliverPrice} 원</td>\n//               </tr>\n//               <tr>\n//                 <th>결제방법</th>\n//                 <td>\n//                   <label>\n//                     <input type='radio' name='payment' value='ACCOUNT' checked={payment === 'ACCOUNT'} onChange={handlePaymentChange} /> 계좌이체 <br />\n//                   </label>\n//                   <label>\n//                     <input type='radio' name='payment' value='POINT' checked={payment === 'POINT'} onChange={handlePaymentChange} /> 포인트결제 &nbsp; &nbsp; &nbsp;\n//                     <span className='badge'>최대 캐시적립</span> <br />\n//                   </label>\n//                   <label>\n//                     <input type='radio' name='payment' value='CARD' checked={payment === 'CARD'} onChange={handlePaymentChange} /> 신용/체크카드 <br />\n//                   </label>\n//                   <label>\n//                     <input type='radio' name='payment' value='CORPCARD' checked={payment === 'CORPCARD'} onChange={handlePaymentChange} /> 법인카드 <br />\n//                   </label>\n//                   <label>\n//                     <input type='radio' name='payment' value='PHONE' checked={payment === 'PHONE'} onChange={handlePaymentChange} /> 휴대폰 <br />\n//                   </label>\n//                   <label>\n//                     <input type='radio' name='payment' value='NOACOUNT' checked={payment === 'NOACOUNT'} onChange={handlePaymentChange} /> 무통장입금(상세조회) <br />\n//                   </label>\n//                 </td>\n//               </tr>\n//               <tr>\n//                 <th>연락처</th>\n//                 <td>{member.phone}</td>\n//               </tr>\n//               <tr>\n//                 <th>요청사항</th>\n//                 <td>문 앞(직접수령)</td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </section>\n//         <section>\n//           <button className='pay' onClick={() => pay(goods, payment)}>\n//             결제하기\n//           </button>\n//           &nbsp;&nbsp; <button className='cancel'>메인 페이지로</button>\n//         </section>\n//       </div>\n//     </PayComp>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/devv/pet_project/pet_front/src/components/Layout/pay/Pay.jsx"],"sourcesContent":["// import PayComp from './PayStyle';\r\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n// import { useEffect, useState } from 'react';\r\n// import MemberApi from '../../../api/MemberApi';\r\n// import GoodsApi from '../../../api/GoodsApi';\r\n\r\n// export default function Pay() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const [goods, setGoods] = useState([]);\r\n\r\n//   // const goodsList = location.state?.goods || []; // Order -> Pay 이동위해 변경 (rawGoods 추가)\r\n//   const rawGoods = location.state?.goods;\r\n//   const goodsList = Array.isArray(rawGoods) ? rawGoods : rawGoods ? [rawGoods] : []; // 단일 상품이 오더라도 강제로 배열로 감싸기\r\n\r\n//   const quantities = location.state?.quantity || [];\r\n//   const [payment, setPayment] = useState();\r\n//   const goodsImg = process.env.PUBLIC_URL + '/images/pic1.png';\r\n\r\n//   const [member, setMember] = useState([]);\r\n\r\n//   // 사용자(구매자) 정보\r\n//   const memdetail = async () => {\r\n//     MemberApi.detail()\r\n//       .then((response) => {\r\n//         setMember(response);\r\n//       })\r\n//       .catch((err) => {});\r\n//   };\r\n\r\n//   // 사용자의 주소정보 (추가예정)\r\n\r\n//   // 총 구매가격\r\n//   const totalPrice = goodsList.reduce((acc, item) => {\r\n//     const price = item.price || 0;\r\n//     const quantity = item.quantity || 1;\r\n//     return acc + price * quantity;\r\n//   }, 0);\r\n//   // 배달료\r\n//   const deliverPrice = 3000;\r\n\r\n//   // 결제 로직 수행(BackEnd)\r\n//   const pay = async (goods, payment) => {\r\n//     const payload = {\r\n//       goodsList: goods,\r\n//       payment: payment,\r\n//     };\r\n//     alert('pay 동작테스트');\r\n//     GoodsApi.pay(payload) // 여기가 호출\r\n//       .then((response) => {\r\n//         alert('GoodsApi.pay() 성공');\r\n//         navigate('/user/orderdetail');\r\n//       })\r\n//       .catch((err) => {\r\n//         alert('GoodsApi.pay() 에러');\r\n//       });\r\n//   };\r\n\r\n//   // 걸제수단 핸들링\r\n//   const handlePaymentChange = (e) => {\r\n//     setPayment(e.target.value);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     console.log('goodsList:', goodsList);\r\n//    //  memdetail();\r\n//     setGoods(goodsList);\r\n//   }, [goodsList]);\r\n\r\n//   return (\r\n//     <PayComp>\r\n//       <div className='container'>\r\n//         <section>\r\n//           <h2>구 매 자</h2>\r\n//           <hr />\r\n//           <div className='title'>구매자</div>\r\n//           <table className='payment'>\r\n//             <tbody>\r\n//               <tr>\r\n//                 <th>이름</th>\r\n//                 <td>{member.name}</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>이메일</th>\r\n//                 <td>{member.email}</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>연락처</th>\r\n//                 <td>{member.phone}</td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </section>\r\n//         <br />\r\n//         <section>\r\n//           <h2>배 송 지</h2>\r\n//           <hr />\r\n//           <div className='title'>\r\n//             수령인&nbsp;&nbsp; <button onClick={() => {}}>수정</button>\r\n//           </div>\r\n//           <table>\r\n//             <tbody>\r\n//               <tr>\r\n//                 <th>이름</th>\r\n//                 <td>{member.name}</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>배송지</th>\r\n//                 <td>경기 성남시</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>연락처</th>\r\n//                 <td>{member.phone}</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>요청사항</th>\r\n//                 <td>\r\n//                   문 앞(직접수령) &nbsp;&nbsp; <button>수정</button>\r\n//                 </td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </section>\r\n//         <br />\r\n//         <section>\r\n//           <h2>구 매 목 록</h2>\r\n//           <hr />\r\n//           <div className='title'>상품정보</div>\r\n//           {goods.map((item, index) => (\r\n//             <div className='goodslist' key={index}>\r\n//               <div>\r\n//                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                 {item.goods_name}\r\n//                 {', '}\r\n//                 {item.description}\r\n//                 {', '}\r\n//                 {item.quantity}\r\n//                 {' 개'}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </section>\r\n//         <br />\r\n//         <section>\r\n//           <h2>결 제</h2>\r\n//           <hr />\r\n//           <div className='title'>결제 정보</div>\r\n//           <table>\r\n//             <tbody>\r\n//               <tr>\r\n//                 <th>상품 가격</th>\r\n//                 <td>{totalPrice} 원</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>배송비</th>\r\n//                 <td>{deliverPrice} 원</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>최종결제금액</th>\r\n//                 <td>{totalPrice + deliverPrice} 원</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>결제방법</th>\r\n//                 <td>\r\n//                   <label>\r\n//                     <input type='radio' name='payment' value='ACCOUNT' checked={payment === 'ACCOUNT'} onChange={handlePaymentChange} /> 계좌이체 <br />\r\n//                   </label>\r\n//                   <label>\r\n//                     <input type='radio' name='payment' value='POINT' checked={payment === 'POINT'} onChange={handlePaymentChange} /> 포인트결제 &nbsp; &nbsp; &nbsp;\r\n//                     <span className='badge'>최대 캐시적립</span> <br />\r\n//                   </label>\r\n//                   <label>\r\n//                     <input type='radio' name='payment' value='CARD' checked={payment === 'CARD'} onChange={handlePaymentChange} /> 신용/체크카드 <br />\r\n//                   </label>\r\n//                   <label>\r\n//                     <input type='radio' name='payment' value='CORPCARD' checked={payment === 'CORPCARD'} onChange={handlePaymentChange} /> 법인카드 <br />\r\n//                   </label>\r\n//                   <label>\r\n//                     <input type='radio' name='payment' value='PHONE' checked={payment === 'PHONE'} onChange={handlePaymentChange} /> 휴대폰 <br />\r\n//                   </label>\r\n//                   <label>\r\n//                     <input type='radio' name='payment' value='NOACOUNT' checked={payment === 'NOACOUNT'} onChange={handlePaymentChange} /> 무통장입금(상세조회) <br />\r\n//                   </label>\r\n//                 </td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>연락처</th>\r\n//                 <td>{member.phone}</td>\r\n//               </tr>\r\n//               <tr>\r\n//                 <th>요청사항</th>\r\n//                 <td>문 앞(직접수령)</td>\r\n//               </tr>\r\n//             </tbody>\r\n//           </table>\r\n//         </section>\r\n//         <section>\r\n//           <button className='pay' onClick={() => pay(goods, payment)}>\r\n//             결제하기\r\n//           </button>\r\n//           &nbsp;&nbsp; <button className='cancel'>메인 페이지로</button>\r\n//         </section>\r\n//       </div>\r\n//     </PayComp>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}