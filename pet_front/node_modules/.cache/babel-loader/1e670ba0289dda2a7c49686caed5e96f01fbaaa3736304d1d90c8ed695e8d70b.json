{"ast":null,"code":"import axios from 'axios';\nimport instance from '../api/axiosInstance'; // 인스턴스 불러오기\n\nconst KH_DOMAIN = 'http://localhost:8080';\nconst GoodsApi = {\n  // 장바구니 추가\n  addToCart: async goods => {\n    //alert(`장바구니 담기 => ${goods}`);\n    console.log('');\n    const result = await instance.post(`/cart/add`, goods);\n    return result.data;\n  },\n  // 장바구니 출력 (완료)\n  cartList: async () => {\n    const result = await instance.get(`/cart/list`);\n    // alert(`GoodsApi의 cart 호출완료 => ${JSON.stringify(result.data)} `);\n    return result.data;\n  },\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // 상품 리스트 출력 (메인) (완료)\n  showGoods: async () => {\n    try {\n      const result = await instance.get('/goods/list');\n      if (result.data != null) {\n        alert(`상품 리스트 호출 완료 => ${JSON.stringify(result.data)}`);\n        return result.data.body;\n      }\n    } catch (err) {}\n  },\n  // 상품등록 (완료)\n  regGoods: async goods => {\n    try {\n      const result = await instance.post('/goods/register', goods);\n      if (result.data != null) {\n        alert(`상품등록 완료 => ${result.data}`);\n        return result.data;\n      }\n    } catch (err) {\n      console.error('상품 등록 실패:', err);\n      alert('상품 등록 중 에러가 발생했습니다.');\n    }\n  },\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // 주문등록\n  order: async () => {\n    const result = await instance.post(`/goods/add`);\n    return result.data;\n  },\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // 결제\n  pay: async () => {\n    const result = await instance.post(`/goods/pay`);\n    return result.data;\n  } // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  // // 상품등록 (기존 axios 사용한 코드 - 예시)\n  // regGoods: async (goods) => {\n  //   try {\n  //     const result = await axios.post(`${KH_DOMAIN}/goods/register`, goods, {\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\n  //       },\n  //     });\n  //     if (result.data != null) {\n  //       alert(`상품등록 완료 => ${result.data}`);\n  //       return result.data;\n  //     }\n  //   } catch (err) {\n  //     console.error('상품 등록 실패:', err);\n  //     alert('상품 등록 중 에러가 발생했습니다.');\n  //   }\n  // }, // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n};\nexport default GoodsApi;","map":{"version":3,"names":["axios","instance","KH_DOMAIN","GoodsApi","addToCart","goods","console","log","result","post","data","cartList","get","showGoods","alert","JSON","stringify","body","err","regGoods","error","order","pay"],"sources":["C:/devv/pet_project/pet_front/src/api/GoodsApi.js"],"sourcesContent":["import axios from 'axios';\r\nimport instance from '../api/axiosInstance'; // 인스턴스 불러오기\r\n\r\nconst KH_DOMAIN = 'http://localhost:8080';\r\nconst GoodsApi = {\r\n  // 장바구니 추가\r\n  addToCart: async (goods) => {\r\n    //alert(`장바구니 담기 => ${goods}`);\r\n    console.log('');\r\n    const result = await instance.post(`/cart/add`, goods);\r\n    return result.data;\r\n  },\r\n\r\n  // 장바구니 출력 (완료)\r\n  cartList: async () => {\r\n    const result = await instance.get(`/cart/list`);\r\n    // alert(`GoodsApi의 cart 호출완료 => ${JSON.stringify(result.data)} `);\r\n    return result.data;\r\n  }, // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  // 상품 리스트 출력 (메인) (완료)\r\n  showGoods: async () => {\r\n    try {\r\n      const result = await instance.get('/goods/list');\r\n      if (result.data != null) {\r\n        alert(`상품 리스트 호출 완료 => ${JSON.stringify(result.data)}`);\r\n        return result.data.body;\r\n      }\r\n    } catch (err) {}\r\n  },\r\n\r\n  // 상품등록 (완료)\r\n  regGoods: async (goods) => {\r\n    try {\r\n      const result = await instance.post('/goods/register', goods);\r\n      if (result.data != null) {\r\n        alert(`상품등록 완료 => ${result.data}`);\r\n        return result.data;\r\n      }\r\n    } catch (err) {\r\n      console.error('상품 등록 실패:', err);\r\n      alert('상품 등록 중 에러가 발생했습니다.');\r\n    }\r\n  }, // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  // 주문등록\r\n  order: async () => {\r\n    const result = await instance.post(`/goods/add`);\r\n    return result.data;\r\n  }, // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  // 결제\r\n  pay: async () => {\r\n    const result = await instance.post(`/goods/pay`);\r\n\r\n    return result.data;\r\n  }, // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  // // 상품등록 (기존 axios 사용한 코드 - 예시)\r\n  // regGoods: async (goods) => {\r\n  //   try {\r\n  //     const result = await axios.post(`${KH_DOMAIN}/goods/register`, goods, {\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //         Authorization: `${localStorage.getItem('grantType')} ${localStorage.getItem('accessToken')}`,\r\n  //       },\r\n  //     });\r\n  //     if (result.data != null) {\r\n  //       alert(`상품등록 완료 => ${result.data}`);\r\n  //       return result.data;\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.error('상품 등록 실패:', err);\r\n  //     alert('상품 등록 중 에러가 발생했습니다.');\r\n  //   }\r\n  // }, // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n};\r\n\r\nexport default GoodsApi;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB,CAAC,CAAC;;AAE7C,MAAMC,SAAS,GAAG,uBAAuB;AACzC,MAAMC,QAAQ,GAAG;EACf;EACAC,SAAS,EAAE,MAAOC,KAAK,IAAK;IAC1B;IACAC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IACf,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,WAAW,EAAEJ,KAAK,CAAC;IACtD,OAAOG,MAAM,CAACE,IAAI;EACpB,CAAC;EAED;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMH,MAAM,GAAG,MAAMP,QAAQ,CAACW,GAAG,CAAC,YAAY,CAAC;IAC/C;IACA,OAAOJ,MAAM,CAACE,IAAI;EACpB,CAAC;EAAE;;EAEH;EACAG,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAML,MAAM,GAAG,MAAMP,QAAQ,CAACW,GAAG,CAAC,aAAa,CAAC;MAChD,IAAIJ,MAAM,CAACE,IAAI,IAAI,IAAI,EAAE;QACvBI,KAAK,CAAC,mBAAmBC,IAAI,CAACC,SAAS,CAACR,MAAM,CAACE,IAAI,CAAC,EAAE,CAAC;QACvD,OAAOF,MAAM,CAACE,IAAI,CAACO,IAAI;MACzB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;EACjB,CAAC;EAED;EACAC,QAAQ,EAAE,MAAOd,KAAK,IAAK;IACzB,IAAI;MACF,MAAMG,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,iBAAiB,EAAEJ,KAAK,CAAC;MAC5D,IAAIG,MAAM,CAACE,IAAI,IAAI,IAAI,EAAE;QACvBI,KAAK,CAAC,cAAcN,MAAM,CAACE,IAAI,EAAE,CAAC;QAClC,OAAOF,MAAM,CAACE,IAAI;MACpB;IACF,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZZ,OAAO,CAACc,KAAK,CAAC,WAAW,EAAEF,GAAG,CAAC;MAC/BJ,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAAE;;EAEH;EACAO,KAAK,EAAE,MAAAA,CAAA,KAAY;IACjB,MAAMb,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,YAAY,CAAC;IAChD,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAAE;;EAEH;EACAY,GAAG,EAAE,MAAAA,CAAA,KAAY;IACf,MAAMd,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,YAAY,CAAC;IAEhD,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC,CAAE;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAED,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}